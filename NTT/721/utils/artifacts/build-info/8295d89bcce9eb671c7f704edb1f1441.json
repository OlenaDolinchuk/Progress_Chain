{
	"id": "8295d89bcce9eb671c7f704edb1f1441",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/721/utils/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721URIStorage.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC721.sol\";\r\n\r\n/**\r\n * @dev ERC721 token with storage based token URI management.\r\n */\r\nabstract contract ERC721URIStorage is ERC721 {\r\n    using Strings for uint256;\r\n\r\n    // Optional mapping for token URIs\r\n    mapping(uint256 => string) private _tokenURIs;\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        _requireMinted(tokenId);\r\n\r\n        string memory _tokenURI = _tokenURIs[tokenId];\r\n        string memory base = _baseURI();\r\n\r\n        // If there is no base URI, return the token URI.\r\n        if (bytes(base).length == 0) {\r\n            return _tokenURI;\r\n        }\r\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\r\n        if (bytes(_tokenURI).length > 0) {\r\n            return string(abi.encodePacked(base, _tokenURI));\r\n        }\r\n\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\r\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\r\n        _tokenURIs[tokenId] = _tokenURI;\r\n    }\r\n\r\n    /**\r\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\r\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\r\n     * the storage mapping.\r\n     \r\n    function _burn(uint256 tokenId) internal virtual override {\r\n        super._burn(tokenId);\r\n\r\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\r\n            delete _tokenURIs[tokenId];\r\n        }\r\n    }*/\r\n}"
			},
			"contracts/721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./interfaces/IERC721.sol\";\r\nimport \"./interfaces/IERC721Receiver.sol\";\r\nimport \"./interfaces/IERC721Metadata.sol\";\r\nimport \"./utils/Address.sol\";\r\nimport \"./utils/Context.sol\";\r\nimport \"./utils/Strings.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\ncontract ERC721 is Context, IERC721, IERC721Metadata {\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to owner address\r\n    mapping(uint256 => address) private _owners;\r\n\r\n    // Mapping owner address to token count\r\n    mapping(address => uint256) private _balances;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     \r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }*/\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        address owner = _owners[tokenId];\r\n        require(owner != address(0), \"ERC721: invalid token ID\");\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        _requireMinted(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     \r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        require(to != owner, \"ERC721: approval to current owner\");\r\n\r\n        require(\r\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            \"ERC721: approve caller is not token owner nor approved for all\"\r\n        );\r\n\r\n        _approve(to, tokenId);\r\n    }*/\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     \r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        _requireMinted(tokenId);\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }*/\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     \r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }*/\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     \r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }*/\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     \r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        //solhint-disable-next-line max-line-length\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\r\n\r\n        _transfer(from, to, tokenId);\r\n    }*/\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     \r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }*/\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     \r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\r\n        _safeTransfer(from, to, tokenId, data);\r\n    }*/\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     \r\n    function _safeTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\r\n    }*/\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     * and stop existing when they are burned (`_burn`).\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return _owners[tokenId] != address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     \r\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\r\n    }*/\r\n\r\n    /**\r\n     * @dev Safely mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal virtual {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        _mint(to, tokenId);\r\n        require(\r\n            _checkOnERC721Received(address(0), to, tokenId, data),\r\n            \"ERC721: transfer to non ERC721Receiver implementer\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal virtual {\r\n        require(to != address(0), \"ERC721: mint to the zero address\");\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        _beforeTokenTransfer(address(0), to, tokenId);\r\n\r\n        _balances[to] += 1;\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(address(0), to, tokenId);\r\n\r\n        _afterTokenTransfer(address(0), to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     \r\n    function _burn(uint256 tokenId) internal virtual {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n\r\n        _beforeTokenTransfer(owner, address(0), tokenId);\r\n\r\n        // Clear approvals\r\n        _approve(address(0), tokenId);\r\n\r\n        _balances[owner] -= 1;\r\n        delete _owners[tokenId];\r\n\r\n        emit Transfer(owner, address(0), tokenId);\r\n\r\n        _afterTokenTransfer(owner, address(0), tokenId);\r\n    }*/\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     \r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal virtual {\r\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\r\n        require(to != address(0), \"ERC721: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, tokenId);\r\n\r\n        // Clear approvals from the previous owner\r\n        _approve(address(0), tokenId);\r\n\r\n        _balances[from] -= 1;\r\n        _balances[to] += 1;\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        _afterTokenTransfer(from, to, tokenId);\r\n    }*/\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits an {Approval} event.\r\n     \r\n    function _approve(address to, uint256 tokenId) internal virtual {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\r\n    }*/\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     \r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC721: approve to caller\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }*/\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` has not been minted yet.\r\n     */\r\n    function _requireMinted(uint256 tokenId) internal view virtual {\r\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\r\n     * The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) private returns (bool) {\r\n        if (to.isContract()) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                return retval == IERC721Receiver.onERC721Received.selector;\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal virtual {}\r\n    \r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal virtual {}\r\n    \r\n}"
			},
			"contracts/721/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\r\n    uint8 private constant _ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\r\n            value /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0x00\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 length = 0;\r\n        while (temp != 0) {\r\n            length++;\r\n            temp >>= 8;\r\n        }\r\n        return toHexString(value, length);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\r\n    }\r\n}"
			},
			"contracts/721/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"contracts/721/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/721/interfaces/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}"
			},
			"contracts/721/interfaces/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}"
			},
			"contracts/721/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     \r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    */\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     \r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n    */\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     \r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;*/\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     \r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;*/\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     \r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;*/\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     \r\n    function approve(address to, uint256 tokenId) external;\r\n    */\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     \r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n    */\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     \r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n    */\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     \r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n    */\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/721/ERC721.sol\":608:14765  contract ERC721 is Context, IERC721, IERC721Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/721/ERC721.sol\":1387:1503  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/721/ERC721.sol\":1462:1467  name_ */\n  dup2\n    /* \"contracts/721/ERC721.sol\":1454:1459  _name */\n  0x00\n    /* \"contracts/721/ERC721.sol\":1454:1467  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/721/ERC721.sol\":1488:1495  symbol_ */\n  dup1\n    /* \"contracts/721/ERC721.sol\":1478:1485  _symbol */\n  0x01\n    /* \"contracts/721/ERC721.sol\":1478:1495  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/721/ERC721.sol\":1387:1503  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"contracts/721/ERC721.sol\":608:14765  contract ERC721 is Context, IERC721, IERC721Metadata {\r... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:361   */\ntag_22:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_24\n    /* \"#utility.yul\":137:186   */\n  tag_25\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:187   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:264   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":262:264   */\ntag_28:\n    /* \"#utility.yul\":316:355   */\n  tag_29\n    /* \"#utility.yul\":348:354   */\n  dup5\n    /* \"#utility.yul\":343:346   */\n  dup3\n    /* \"#utility.yul\":338:341   */\n  dup6\n    /* \"#utility.yul\":316:355   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":102:361   */\n  pop\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":381:669   */\ntag_31:\n    /* \"#utility.yul\":448:453   */\n  0x00\n    /* \"#utility.yul\":497:500   */\n  dup3\n    /* \"#utility.yul\":490:494   */\n  0x1f\n    /* \"#utility.yul\":482:488   */\n  dup4\n    /* \"#utility.yul\":478:495   */\n  add\n    /* \"#utility.yul\":474:501   */\n  slt\n    /* \"#utility.yul\":464:466   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":515:516   */\n  0x00\n    /* \"#utility.yul\":512:513   */\n  dup1\n    /* \"#utility.yul\":505:517   */\n  revert\n    /* \"#utility.yul\":464:466   */\ntag_33:\n    /* \"#utility.yul\":548:554   */\n  dup2\n    /* \"#utility.yul\":542:555   */\n  mload\n    /* \"#utility.yul\":573:663   */\n  tag_34\n    /* \"#utility.yul\":659:662   */\n  dup5\n    /* \"#utility.yul\":651:657   */\n  dup3\n    /* \"#utility.yul\":644:648   */\n  0x20\n    /* \"#utility.yul\":636:642   */\n  dup7\n    /* \"#utility.yul\":632:649   */\n  add\n    /* \"#utility.yul\":573:663   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":564:663   */\n  swap2\n  pop\n    /* \"#utility.yul\":454:669   */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":675:1327   */\ntag_3:\n    /* \"#utility.yul\":774:780   */\n  0x00\n    /* \"#utility.yul\":782:788   */\n  dup1\n    /* \"#utility.yul\":831:833   */\n  0x40\n    /* \"#utility.yul\":819:828   */\n  dup4\n    /* \"#utility.yul\":810:817   */\n  dup6\n    /* \"#utility.yul\":806:829   */\n  sub\n    /* \"#utility.yul\":802:834   */\n  slt\n    /* \"#utility.yul\":799:801   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":847:848   */\n  0x00\n    /* \"#utility.yul\":844:845   */\n  dup1\n    /* \"#utility.yul\":837:849   */\n  revert\n    /* \"#utility.yul\":799:801   */\ntag_36:\n    /* \"#utility.yul\":911:912   */\n  0x00\n    /* \"#utility.yul\":900:909   */\n  dup4\n    /* \"#utility.yul\":896:913   */\n  add\n    /* \"#utility.yul\":890:914   */\n  mload\n    /* \"#utility.yul\":941:959   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":933:939   */\n  dup2\n    /* \"#utility.yul\":930:960   */\n  gt\n    /* \"#utility.yul\":927:929   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":973:974   */\n  0x00\n    /* \"#utility.yul\":970:971   */\n  dup1\n    /* \"#utility.yul\":963:975   */\n  revert\n    /* \"#utility.yul\":927:929   */\ntag_37:\n    /* \"#utility.yul\":1001:1075   */\n  tag_38\n    /* \"#utility.yul\":1067:1074   */\n  dup6\n    /* \"#utility.yul\":1058:1064   */\n  dup3\n    /* \"#utility.yul\":1047:1056   */\n  dup7\n    /* \"#utility.yul\":1043:1065   */\n  add\n    /* \"#utility.yul\":1001:1075   */\n  tag_31\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":991:1075   */\n  swap3\n  pop\n    /* \"#utility.yul\":861:1085   */\n  pop\n    /* \"#utility.yul\":1145:1147   */\n  0x20\n    /* \"#utility.yul\":1134:1143   */\n  dup4\n    /* \"#utility.yul\":1130:1148   */\n  add\n    /* \"#utility.yul\":1124:1149   */\n  mload\n    /* \"#utility.yul\":1176:1194   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1168:1174   */\n  dup2\n    /* \"#utility.yul\":1165:1195   */\n  gt\n    /* \"#utility.yul\":1162:1164   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1208:1209   */\n  0x00\n    /* \"#utility.yul\":1205:1206   */\n  dup1\n    /* \"#utility.yul\":1198:1210   */\n  revert\n    /* \"#utility.yul\":1162:1164   */\ntag_39:\n    /* \"#utility.yul\":1236:1310   */\n  tag_40\n    /* \"#utility.yul\":1302:1309   */\n  dup6\n    /* \"#utility.yul\":1293:1299   */\n  dup3\n    /* \"#utility.yul\":1282:1291   */\n  dup7\n    /* \"#utility.yul\":1278:1300   */\n  add\n    /* \"#utility.yul\":1236:1310   */\n  tag_31\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1226:1310   */\n  swap2\n  pop\n    /* \"#utility.yul\":1095:1320   */\n  pop\n    /* \"#utility.yul\":789:1327   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1333:1462   */\ntag_27:\n    /* \"#utility.yul\":1367:1373   */\n  0x00\n    /* \"#utility.yul\":1394:1414   */\n  tag_42\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1384:1414   */\n  swap1\n  pop\n    /* \"#utility.yul\":1423:1456   */\n  tag_44\n    /* \"#utility.yul\":1451:1455   */\n  dup3\n    /* \"#utility.yul\":1443:1449   */\n  dup3\n    /* \"#utility.yul\":1423:1456   */\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1374:1462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1468:1543   */\ntag_43:\n    /* \"#utility.yul\":1501:1507   */\n  0x00\n    /* \"#utility.yul\":1534:1536   */\n  0x40\n    /* \"#utility.yul\":1528:1537   */\n  mload\n    /* \"#utility.yul\":1518:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1508:1543   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1549:1857   */\ntag_26:\n    /* \"#utility.yul\":1611:1615   */\n  0x00\n    /* \"#utility.yul\":1701:1719   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1693:1699   */\n  dup3\n    /* \"#utility.yul\":1690:1720   */\n  gt\n    /* \"#utility.yul\":1687:1689   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1723:1741   */\n  tag_49\n  tag_50\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1687:1689   */\ntag_48:\n    /* \"#utility.yul\":1761:1790   */\n  tag_51\n    /* \"#utility.yul\":1783:1789   */\n  dup3\n    /* \"#utility.yul\":1761:1790   */\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1753:1790   */\n  swap1\n  pop\n    /* \"#utility.yul\":1845:1849   */\n  0x20\n    /* \"#utility.yul\":1839:1843   */\n  dup2\n    /* \"#utility.yul\":1835:1850   */\n  add\n    /* \"#utility.yul\":1827:1850   */\n  swap1\n  pop\n    /* \"#utility.yul\":1616:1857   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1863:2170   */\ntag_30:\n    /* \"#utility.yul\":1931:1932   */\n  0x00\n    /* \"#utility.yul\":1941:2054   */\ntag_54:\n    /* \"#utility.yul\":1955:1961   */\n  dup4\n    /* \"#utility.yul\":1952:1953   */\n  dup2\n    /* \"#utility.yul\":1949:1962   */\n  lt\n    /* \"#utility.yul\":1941:2054   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2040:2041   */\n  dup1\n    /* \"#utility.yul\":2035:2038   */\n  dup3\n    /* \"#utility.yul\":2031:2042   */\n  add\n    /* \"#utility.yul\":2025:2043   */\n  mload\n    /* \"#utility.yul\":2021:2022   */\n  dup2\n    /* \"#utility.yul\":2016:2019   */\n  dup5\n    /* \"#utility.yul\":2012:2023   */\n  add\n    /* \"#utility.yul\":2005:2044   */\n  mstore\n    /* \"#utility.yul\":1977:1979   */\n  0x20\n    /* \"#utility.yul\":1974:1975   */\n  dup2\n    /* \"#utility.yul\":1970:1980   */\n  add\n    /* \"#utility.yul\":1965:1980   */\n  swap1\n  pop\n    /* \"#utility.yul\":1941:2054   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":2072:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2070   */\n  dup2\n    /* \"#utility.yul\":2066:2079   */\n  gt\n    /* \"#utility.yul\":2063:2065   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2152:2153   */\n  0x00\n    /* \"#utility.yul\":2143:2149   */\n  dup5\n    /* \"#utility.yul\":2138:2141   */\n  dup5\n    /* \"#utility.yul\":2134:2150   */\n  add\n    /* \"#utility.yul\":2127:2154   */\n  mstore\n    /* \"#utility.yul\":2063:2065   */\ntag_57:\n    /* \"#utility.yul\":1912:2170   */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2176:2496   */\ntag_11:\n    /* \"#utility.yul\":2220:2226   */\n  0x00\n    /* \"#utility.yul\":2257:2258   */\n  0x02\n    /* \"#utility.yul\":2251:2255   */\n  dup3\n    /* \"#utility.yul\":2247:2259   */\n  div\n    /* \"#utility.yul\":2237:2259   */\n  swap1\n  pop\n    /* \"#utility.yul\":2304:2305   */\n  0x01\n    /* \"#utility.yul\":2298:2302   */\n  dup3\n    /* \"#utility.yul\":2294:2306   */\n  and\n    /* \"#utility.yul\":2325:2343   */\n  dup1\n    /* \"#utility.yul\":2315:2317   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":2381:2385   */\n  0x7f\n    /* \"#utility.yul\":2373:2379   */\n  dup3\n    /* \"#utility.yul\":2369:2386   */\n  and\n    /* \"#utility.yul\":2359:2386   */\n  swap2\n  pop\n    /* \"#utility.yul\":2315:2317   */\ntag_59:\n    /* \"#utility.yul\":2443:2445   */\n  0x20\n    /* \"#utility.yul\":2435:2441   */\n  dup3\n    /* \"#utility.yul\":2432:2446   */\n  lt\n    /* \"#utility.yul\":2412:2430   */\n  dup2\n    /* \"#utility.yul\":2409:2447   */\n  eq\n    /* \"#utility.yul\":2406:2408   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2462:2480   */\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2406:2408   */\ntag_60:\n    /* \"#utility.yul\":2227:2496   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2502:2783   */\ntag_45:\n    /* \"#utility.yul\":2585:2612   */\n  tag_64\n    /* \"#utility.yul\":2607:2611   */\n  dup3\n    /* \"#utility.yul\":2585:2612   */\n  tag_52\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2577:2583   */\n  dup2\n    /* \"#utility.yul\":2573:2613   */\n  add\n    /* \"#utility.yul\":2715:2721   */\n  dup2\n    /* \"#utility.yul\":2703:2713   */\n  dup2\n    /* \"#utility.yul\":2700:2722   */\n  lt\n    /* \"#utility.yul\":2679:2697   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2667:2677   */\n  dup3\n    /* \"#utility.yul\":2664:2698   */\n  gt\n    /* \"#utility.yul\":2661:2723   */\n  or\n    /* \"#utility.yul\":2658:2660   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2726:2744   */\n  tag_66\n  tag_50\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2658:2660   */\ntag_65:\n    /* \"#utility.yul\":2766:2776   */\n  dup1\n    /* \"#utility.yul\":2762:2764   */\n  0x40\n    /* \"#utility.yul\":2755:2777   */\n  mstore\n    /* \"#utility.yul\":2545:2783   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2789:2969   */\ntag_62:\n    /* \"#utility.yul\":2837:2914   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2834:2835   */\n  0x00\n    /* \"#utility.yul\":2827:2915   */\n  mstore\n    /* \"#utility.yul\":2934:2938   */\n  0x22\n    /* \"#utility.yul\":2931:2932   */\n  0x04\n    /* \"#utility.yul\":2924:2939   */\n  mstore\n    /* \"#utility.yul\":2958:2962   */\n  0x24\n    /* \"#utility.yul\":2955:2956   */\n  0x00\n    /* \"#utility.yul\":2948:2963   */\n  revert\n    /* \"#utility.yul\":2975:3155   */\ntag_50:\n    /* \"#utility.yul\":3023:3100   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3020:3021   */\n  0x00\n    /* \"#utility.yul\":3013:3101   */\n  mstore\n    /* \"#utility.yul\":3120:3124   */\n  0x41\n    /* \"#utility.yul\":3117:3118   */\n  0x04\n    /* \"#utility.yul\":3110:3125   */\n  mstore\n    /* \"#utility.yul\":3144:3148   */\n  0x24\n    /* \"#utility.yul\":3141:3142   */\n  0x00\n    /* \"#utility.yul\":3134:3149   */\n  revert\n    /* \"#utility.yul\":3161:3263   */\ntag_52:\n    /* \"#utility.yul\":3202:3208   */\n  0x00\n    /* \"#utility.yul\":3253:3255   */\n  0x1f\n    /* \"#utility.yul\":3249:3256   */\n  not\n    /* \"#utility.yul\":3244:3246   */\n  0x1f\n    /* \"#utility.yul\":3237:3242   */\n  dup4\n    /* \"#utility.yul\":3233:3247   */\n  add\n    /* \"#utility.yul\":3229:3257   */\n  and\n    /* \"#utility.yul\":3219:3257   */\n  swap1\n  pop\n    /* \"#utility.yul\":3209:3263   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/721/ERC721.sol\":608:14765  contract ERC721 is Context, IERC721, IERC721Metadata {\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/721/ERC721.sol\":608:14765  contract ERC721 is Context, IERC721, IERC721Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/721/ERC721.sol\":2502:2602  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/721/ERC721.sol\":2213:2435  function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/721/ERC721.sol\":1944:2151  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/721/ERC721.sol\":2671:2775  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/721/ERC721.sol\":2846:3127  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r... */\n    tag_7:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/721/ERC721.sol\":2502:2602  function name() public view virtual override returns (string memory) {\r... */\n    tag_9:\n        /* \"contracts/721/ERC721.sol\":2556:2569  string memory */\n      0x60\n        /* \"contracts/721/ERC721.sol\":2589:2594  _name */\n      0x00\n        /* \"contracts/721/ERC721.sol\":2582:2594  return _name */\n      dup1\n      sload\n      tag_32\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_34\n      swap1\n      tag_33\n      jump\t// in\n    tag_34:\n      dup1\n      iszero\n      tag_35\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_36\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_35)\n    tag_36:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_37:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_37\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/721/ERC721.sol\":2502:2602  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/721/ERC721.sol\":2213:2435  function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_15:\n        /* \"contracts/721/ERC721.sol\":2285:2292  address */\n      0x00\n        /* \"contracts/721/ERC721.sol\":2305:2318  address owner */\n      dup1\n        /* \"contracts/721/ERC721.sol\":2321:2328  _owners */\n      0x02\n        /* \"contracts/721/ERC721.sol\":2321:2337  _owners[tokenId] */\n      0x00\n        /* \"contracts/721/ERC721.sol\":2329:2336  tokenId */\n      dup5\n        /* \"contracts/721/ERC721.sol\":2321:2337  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/721/ERC721.sol\":2305:2337  address owner = _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/721/ERC721.sol\":2373:2374  0 */\n      0x00\n        /* \"contracts/721/ERC721.sol\":2356:2375  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/721/ERC721.sol\":2356:2361  owner */\n      dup2\n        /* \"contracts/721/ERC721.sol\":2356:2375  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/721/ERC721.sol\":2348:2404  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"contracts/721/ERC721.sol\":2422:2427  owner */\n      dup1\n        /* \"contracts/721/ERC721.sol\":2415:2427  return owner */\n      swap2\n      pop\n      pop\n        /* \"contracts/721/ERC721.sol\":2213:2435  function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/721/ERC721.sol\":1944:2151  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n    tag_21:\n        /* \"contracts/721/ERC721.sol\":2016:2023  uint256 */\n      0x00\n        /* \"contracts/721/ERC721.sol\":2061:2062  0 */\n      dup1\n        /* \"contracts/721/ERC721.sol\":2044:2063  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/721/ERC721.sol\":2044:2049  owner */\n      dup3\n        /* \"contracts/721/ERC721.sol\":2044:2063  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/721/ERC721.sol\":2036:2109  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"contracts/721/ERC721.sol\":2127:2136  _balances */\n      0x03\n        /* \"contracts/721/ERC721.sol\":2127:2143  _balances[owner] */\n      0x00\n        /* \"contracts/721/ERC721.sol\":2137:2142  owner */\n      dup4\n        /* \"contracts/721/ERC721.sol\":2127:2143  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/721/ERC721.sol\":2120:2143  return _balances[owner] */\n      swap1\n      pop\n        /* \"contracts/721/ERC721.sol\":1944:2151  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/721/ERC721.sol\":2671:2775  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_25:\n        /* \"contracts/721/ERC721.sol\":2727:2740  string memory */\n      0x60\n        /* \"contracts/721/ERC721.sol\":2760:2767  _symbol */\n      0x01\n        /* \"contracts/721/ERC721.sol\":2753:2767  return _symbol */\n      dup1\n      sload\n      tag_47\n      swap1\n      tag_33\n      jump\t// in\n    tag_47:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_48\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_50\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_49)\n    tag_50:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_51:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_51\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/721/ERC721.sol\":2671:2775  function symbol() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/721/ERC721.sol\":2846:3127  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r... */\n    tag_29:\n        /* \"contracts/721/ERC721.sol\":2919:2932  string memory */\n      0x60\n        /* \"contracts/721/ERC721.sol\":2945:2968  _requireMinted(tokenId) */\n      tag_53\n        /* \"contracts/721/ERC721.sol\":2960:2967  tokenId */\n      dup3\n        /* \"contracts/721/ERC721.sol\":2945:2959  _requireMinted */\n      tag_54\n        /* \"contracts/721/ERC721.sol\":2945:2968  _requireMinted(tokenId) */\n      jump\t// in\n    tag_53:\n        /* \"contracts/721/ERC721.sol\":2981:3002  string memory baseURI */\n      0x00\n        /* \"contracts/721/ERC721.sol\":3005:3015  _baseURI() */\n      tag_55\n        /* \"contracts/721/ERC721.sol\":3005:3013  _baseURI */\n      tag_56\n        /* \"contracts/721/ERC721.sol\":3005:3015  _baseURI() */\n      jump\t// in\n    tag_55:\n        /* \"contracts/721/ERC721.sol\":2981:3015  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/721/ERC721.sol\":3057:3058  0 */\n      0x00\n        /* \"contracts/721/ERC721.sol\":3039:3046  baseURI */\n      dup2\n        /* \"contracts/721/ERC721.sol\":3033:3054  bytes(baseURI).length */\n      mload\n        /* \"contracts/721/ERC721.sol\":3033:3058  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/721/ERC721.sol\":3033:3119  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_57\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_58)\n    tag_57:\n        /* \"contracts/721/ERC721.sol\":3085:3092  baseURI */\n      dup1\n        /* \"contracts/721/ERC721.sol\":3094:3112  tokenId.toString() */\n      tag_59\n        /* \"contracts/721/ERC721.sol\":3094:3101  tokenId */\n      dup5\n        /* \"contracts/721/ERC721.sol\":3094:3110  tokenId.toString */\n      tag_60\n        /* \"contracts/721/ERC721.sol\":3094:3112  tokenId.toString() */\n      jump\t// in\n    tag_59:\n        /* \"contracts/721/ERC721.sol\":3068:3113  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_61\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/721/ERC721.sol\":3033:3119  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_58:\n        /* \"contracts/721/ERC721.sol\":3026:3119  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contracts/721/ERC721.sol\":2846:3127  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/721/ERC721.sol\":11990:12125  function _requireMinted(uint256 tokenId) internal view virtual {\r... */\n    tag_54:\n        /* \"contracts/721/ERC721.sol\":12072:12088  _exists(tokenId) */\n      tag_64\n        /* \"contracts/721/ERC721.sol\":12080:12087  tokenId */\n      dup2\n        /* \"contracts/721/ERC721.sol\":12072:12079  _exists */\n      tag_65\n        /* \"contracts/721/ERC721.sol\":12072:12088  _exists(tokenId) */\n      jump\t// in\n    tag_64:\n        /* \"contracts/721/ERC721.sol\":12064:12117  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_41\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/721/ERC721.sol\":11990:12125  function _requireMinted(uint256 tokenId) internal view virtual {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/721/ERC721.sol\":3376:3470  function _baseURI() internal view virtual returns (string memory) {\r... */\n    tag_56:\n        /* \"contracts/721/ERC721.sol\":3427:3440  string memory */\n      0x60\n        /* \"contracts/721/ERC721.sol\":3453:3462  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/721/ERC721.sol\":3376:3470  function _baseURI() internal view virtual returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/721/utils/Strings.sol\":392:1115  function toString(uint256 value) internal pure returns (string memory) {\r... */\n    tag_60:\n        /* \"contracts/721/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"contracts/721/utils/Strings.sol\":678:679  0 */\n      0x00\n        /* \"contracts/721/utils/Strings.sol\":669:674  value */\n      dup3\n        /* \"contracts/721/utils/Strings.sol\":669:679  value == 0 */\n      eq\n        /* \"contracts/721/utils/Strings.sol\":665:718  if (value == 0) {\r... */\n      iszero\n      tag_70\n      jumpi\n        /* \"contracts/721/utils/Strings.sol\":696:706  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_69)\n        /* \"contracts/721/utils/Strings.sol\":665:718  if (value == 0) {\r... */\n    tag_70:\n        /* \"contracts/721/utils/Strings.sol\":728:740  uint256 temp */\n      0x00\n        /* \"contracts/721/utils/Strings.sol\":743:748  value */\n      dup3\n        /* \"contracts/721/utils/Strings.sol\":728:748  uint256 temp = value */\n      swap1\n      pop\n        /* \"contracts/721/utils/Strings.sol\":759:773  uint256 digits */\n      0x00\n        /* \"contracts/721/utils/Strings.sol\":784:862  while (temp != 0) {\r... */\n    tag_71:\n        /* \"contracts/721/utils/Strings.sol\":799:800  0 */\n      0x00\n        /* \"contracts/721/utils/Strings.sol\":791:795  temp */\n      dup3\n        /* \"contracts/721/utils/Strings.sol\":791:800  temp != 0 */\n      eq\n        /* \"contracts/721/utils/Strings.sol\":784:862  while (temp != 0) {\r... */\n      tag_72\n      jumpi\n        /* \"contracts/721/utils/Strings.sol\":817:825  digits++ */\n      dup1\n      dup1\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      swap2\n      pop\n      pop\n        /* \"contracts/721/utils/Strings.sol\":848:850  10 */\n      0x0a\n        /* \"contracts/721/utils/Strings.sol\":840:850  temp /= 10 */\n      dup3\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      swap2\n      pop\n        /* \"contracts/721/utils/Strings.sol\":784:862  while (temp != 0) {\r... */\n      jump(tag_71)\n    tag_72:\n        /* \"contracts/721/utils/Strings.sol\":872:891  bytes memory buffer */\n      0x00\n        /* \"contracts/721/utils/Strings.sol\":904:910  digits */\n      dup2\n        /* \"contracts/721/utils/Strings.sol\":894:911  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_77\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_77:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_78\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_78:\n      pop\n        /* \"contracts/721/utils/Strings.sol\":872:911  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"contracts/721/utils/Strings.sol\":922:1076  while (value != 0) {\r... */\n    tag_79:\n        /* \"contracts/721/utils/Strings.sol\":938:939  0 */\n      0x00\n        /* \"contracts/721/utils/Strings.sol\":929:934  value */\n      dup6\n        /* \"contracts/721/utils/Strings.sol\":929:939  value != 0 */\n      eq\n        /* \"contracts/721/utils/Strings.sol\":922:1076  while (value != 0) {\r... */\n      tag_80\n      jumpi\n        /* \"contracts/721/utils/Strings.sol\":966:967  1 */\n      0x01\n        /* \"contracts/721/utils/Strings.sol\":956:967  digits -= 1 */\n      dup3\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      swap2\n      pop\n        /* \"contracts/721/utils/Strings.sol\":1033:1035  10 */\n      0x0a\n        /* \"contracts/721/utils/Strings.sol\":1025:1030  value */\n      dup6\n        /* \"contracts/721/utils/Strings.sol\":1025:1035  value % 10 */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"contracts/721/utils/Strings.sol\":1012:1014  48 */\n      0x30\n        /* \"contracts/721/utils/Strings.sol\":1012:1036  48 + uint256(value % 10) */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"contracts/721/utils/Strings.sol\":999:1038  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"contracts/721/utils/Strings.sol\":982:988  buffer */\n      dup2\n        /* \"contracts/721/utils/Strings.sol\":989:995  digits */\n      dup4\n        /* \"contracts/721/utils/Strings.sol\":982:996  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_87\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_87:\n      0x20\n      add\n      add\n        /* \"contracts/721/utils/Strings.sol\":982:1038  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/721/utils/Strings.sol\":1062:1064  10 */\n      0x0a\n        /* \"contracts/721/utils/Strings.sol\":1053:1064  value /= 10 */\n      dup6\n      tag_88\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_88:\n      swap5\n      pop\n        /* \"contracts/721/utils/Strings.sol\":922:1076  while (value != 0) {\r... */\n      jump(tag_79)\n    tag_80:\n        /* \"contracts/721/utils/Strings.sol\":1100:1106  buffer */\n      dup1\n        /* \"contracts/721/utils/Strings.sol\":1086:1107  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/721/utils/Strings.sol\":392:1115  function toString(uint256 value) internal pure returns (string memory) {\r... */\n    tag_69:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/721/ERC721.sol\":7208:7335  function _exists(uint256 tokenId) internal view virtual returns (bool) {\r... */\n    tag_65:\n        /* \"contracts/721/ERC721.sol\":7273:7277  bool */\n      0x00\n        /* \"contracts/721/ERC721.sol\":7325:7326  0 */\n      dup1\n        /* \"contracts/721/ERC721.sol\":7297:7327  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/721/ERC721.sol\":7297:7304  _owners */\n      0x02\n        /* \"contracts/721/ERC721.sol\":7297:7313  _owners[tokenId] */\n      0x00\n        /* \"contracts/721/ERC721.sol\":7305:7312  tokenId */\n      dup5\n        /* \"contracts/721/ERC721.sol\":7297:7313  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/721/ERC721.sol\":7297:7327  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/721/ERC721.sol\":7290:7327  return _owners[tokenId] != address(0) */\n      swap1\n      pop\n        /* \"contracts/721/ERC721.sol\":7208:7335  function _exists(uint256 tokenId) internal view virtual returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_91:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_93\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_95:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_97\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_20:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_100:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_101\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_91\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:827   */\n    tag_14:\n        /* \"#utility.yul\":624:630   */\n      0x00\n        /* \"#utility.yul\":673:675   */\n      0x20\n        /* \"#utility.yul\":661:670   */\n      dup3\n        /* \"#utility.yul\":652:659   */\n      dup5\n        /* \"#utility.yul\":648:671   */\n      sub\n        /* \"#utility.yul\":644:676   */\n      slt\n        /* \"#utility.yul\":641:643   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":641:643   */\n    tag_103:\n        /* \"#utility.yul\":732:733   */\n      0x00\n        /* \"#utility.yul\":757:810   */\n      tag_104\n        /* \"#utility.yul\":802:809   */\n      dup5\n        /* \"#utility.yul\":793:799   */\n      dup3\n        /* \"#utility.yul\":782:791   */\n      dup6\n        /* \"#utility.yul\":778:800   */\n      add\n        /* \"#utility.yul\":757:810   */\n      tag_95\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":747:810   */\n      swap2\n      pop\n        /* \"#utility.yul\":703:820   */\n      pop\n        /* \"#utility.yul\":631:827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":833:951   */\n    tag_105:\n        /* \"#utility.yul\":920:944   */\n      tag_107\n        /* \"#utility.yul\":938:943   */\n      dup2\n        /* \"#utility.yul\":920:944   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":915:918   */\n      dup3\n        /* \"#utility.yul\":908:945   */\n      mstore\n        /* \"#utility.yul\":898:951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":957:1321   */\n    tag_109:\n        /* \"#utility.yul\":1045:1048   */\n      0x00\n        /* \"#utility.yul\":1073:1112   */\n      tag_111\n        /* \"#utility.yul\":1106:1111   */\n      dup3\n        /* \"#utility.yul\":1073:1112   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1128:1199   */\n      tag_113\n        /* \"#utility.yul\":1192:1198   */\n      dup2\n        /* \"#utility.yul\":1187:1190   */\n      dup6\n        /* \"#utility.yul\":1128:1199   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1121:1199   */\n      swap4\n      pop\n        /* \"#utility.yul\":1208:1260   */\n      tag_115\n        /* \"#utility.yul\":1253:1259   */\n      dup2\n        /* \"#utility.yul\":1248:1251   */\n      dup6\n        /* \"#utility.yul\":1241:1245   */\n      0x20\n        /* \"#utility.yul\":1234:1239   */\n      dup7\n        /* \"#utility.yul\":1230:1246   */\n      add\n        /* \"#utility.yul\":1208:1260   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1285:1314   */\n      tag_117\n        /* \"#utility.yul\":1307:1313   */\n      dup2\n        /* \"#utility.yul\":1285:1314   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1280:1283   */\n      dup5\n        /* \"#utility.yul\":1276:1315   */\n      add\n        /* \"#utility.yul\":1269:1315   */\n      swap2\n      pop\n        /* \"#utility.yul\":1049:1321   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1327:1704   */\n    tag_119:\n        /* \"#utility.yul\":1433:1436   */\n      0x00\n        /* \"#utility.yul\":1461:1500   */\n      tag_121\n        /* \"#utility.yul\":1494:1499   */\n      dup3\n        /* \"#utility.yul\":1461:1500   */\n      tag_112\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1516:1605   */\n      tag_122\n        /* \"#utility.yul\":1598:1604   */\n      dup2\n        /* \"#utility.yul\":1593:1596   */\n      dup6\n        /* \"#utility.yul\":1516:1605   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1509:1605   */\n      swap4\n      pop\n        /* \"#utility.yul\":1614:1666   */\n      tag_124\n        /* \"#utility.yul\":1659:1665   */\n      dup2\n        /* \"#utility.yul\":1654:1657   */\n      dup6\n        /* \"#utility.yul\":1647:1651   */\n      0x20\n        /* \"#utility.yul\":1640:1645   */\n      dup7\n        /* \"#utility.yul\":1636:1652   */\n      add\n        /* \"#utility.yul\":1614:1666   */\n      tag_116\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1691:1697   */\n      dup1\n        /* \"#utility.yul\":1686:1689   */\n      dup5\n        /* \"#utility.yul\":1682:1698   */\n      add\n        /* \"#utility.yul\":1675:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1437:1704   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1710:2076   */\n    tag_125:\n        /* \"#utility.yul\":1852:1855   */\n      0x00\n        /* \"#utility.yul\":1873:1940   */\n      tag_127\n        /* \"#utility.yul\":1937:1939   */\n      0x29\n        /* \"#utility.yul\":1932:1935   */\n      dup4\n        /* \"#utility.yul\":1873:1940   */\n      tag_114\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1866:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1949:2042   */\n      tag_128\n        /* \"#utility.yul\":2038:2041   */\n      dup3\n        /* \"#utility.yul\":1949:2042   */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2067:2069   */\n      0x40\n        /* \"#utility.yul\":2062:2065   */\n      dup3\n        /* \"#utility.yul\":2058:2070   */\n      add\n        /* \"#utility.yul\":2051:2070   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:2076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2082:2448   */\n    tag_130:\n        /* \"#utility.yul\":2224:2227   */\n      0x00\n        /* \"#utility.yul\":2245:2312   */\n      tag_132\n        /* \"#utility.yul\":2309:2311   */\n      0x18\n        /* \"#utility.yul\":2304:2307   */\n      dup4\n        /* \"#utility.yul\":2245:2312   */\n      tag_114\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2238:2312   */\n      swap2\n      pop\n        /* \"#utility.yul\":2321:2414   */\n      tag_133\n        /* \"#utility.yul\":2410:2413   */\n      dup3\n        /* \"#utility.yul\":2321:2414   */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2439:2441   */\n      0x20\n        /* \"#utility.yul\":2434:2437   */\n      dup3\n        /* \"#utility.yul\":2430:2442   */\n      add\n        /* \"#utility.yul\":2423:2442   */\n      swap1\n      pop\n        /* \"#utility.yul\":2228:2448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2454:2572   */\n    tag_135:\n        /* \"#utility.yul\":2541:2565   */\n      tag_137\n        /* \"#utility.yul\":2559:2564   */\n      dup2\n        /* \"#utility.yul\":2541:2565   */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2536:2539   */\n      dup3\n        /* \"#utility.yul\":2529:2566   */\n      mstore\n        /* \"#utility.yul\":2519:2572   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2578:3013   */\n    tag_62:\n        /* \"#utility.yul\":2758:2761   */\n      0x00\n        /* \"#utility.yul\":2780:2875   */\n      tag_140\n        /* \"#utility.yul\":2871:2874   */\n      dup3\n        /* \"#utility.yul\":2862:2868   */\n      dup6\n        /* \"#utility.yul\":2780:2875   */\n      tag_119\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2773:2875   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2987   */\n      tag_141\n        /* \"#utility.yul\":2983:2986   */\n      dup3\n        /* \"#utility.yul\":2974:2980   */\n      dup5\n        /* \"#utility.yul\":2892:2987   */\n      tag_119\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2885:2987   */\n      swap2\n      pop\n        /* \"#utility.yul\":3004:3007   */\n      dup2\n        /* \"#utility.yul\":2997:3007   */\n      swap1\n      pop\n        /* \"#utility.yul\":2762:3013   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3241   */\n    tag_17:\n        /* \"#utility.yul\":3112:3116   */\n      0x00\n        /* \"#utility.yul\":3150:3152   */\n      0x20\n        /* \"#utility.yul\":3139:3148   */\n      dup3\n        /* \"#utility.yul\":3135:3153   */\n      add\n        /* \"#utility.yul\":3127:3153   */\n      swap1\n      pop\n        /* \"#utility.yul\":3163:3234   */\n      tag_143\n        /* \"#utility.yul\":3231:3232   */\n      0x00\n        /* \"#utility.yul\":3220:3229   */\n      dup4\n        /* \"#utility.yul\":3216:3233   */\n      add\n        /* \"#utility.yul\":3207:3213   */\n      dup5\n        /* \"#utility.yul\":3163:3234   */\n      tag_105\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3117:3241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3247:3560   */\n    tag_11:\n        /* \"#utility.yul\":3360:3364   */\n      0x00\n        /* \"#utility.yul\":3398:3400   */\n      0x20\n        /* \"#utility.yul\":3387:3396   */\n      dup3\n        /* \"#utility.yul\":3383:3401   */\n      add\n        /* \"#utility.yul\":3375:3401   */\n      swap1\n      pop\n        /* \"#utility.yul\":3447:3456   */\n      dup2\n        /* \"#utility.yul\":3441:3445   */\n      dup2\n        /* \"#utility.yul\":3437:3457   */\n      sub\n        /* \"#utility.yul\":3433:3434   */\n      0x00\n        /* \"#utility.yul\":3422:3431   */\n      dup4\n        /* \"#utility.yul\":3418:3435   */\n      add\n        /* \"#utility.yul\":3411:3458   */\n      mstore\n        /* \"#utility.yul\":3475:3553   */\n      tag_145\n        /* \"#utility.yul\":3548:3552   */\n      dup2\n        /* \"#utility.yul\":3539:3545   */\n      dup5\n        /* \"#utility.yul\":3475:3553   */\n      tag_109\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3467:3553   */\n      swap1\n      pop\n        /* \"#utility.yul\":3365:3560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3566:3985   */\n    tag_45:\n        /* \"#utility.yul\":3732:3736   */\n      0x00\n        /* \"#utility.yul\":3770:3772   */\n      0x20\n        /* \"#utility.yul\":3759:3768   */\n      dup3\n        /* \"#utility.yul\":3755:3773   */\n      add\n        /* \"#utility.yul\":3747:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3819:3828   */\n      dup2\n        /* \"#utility.yul\":3813:3817   */\n      dup2\n        /* \"#utility.yul\":3809:3829   */\n      sub\n        /* \"#utility.yul\":3805:3806   */\n      0x00\n        /* \"#utility.yul\":3794:3803   */\n      dup4\n        /* \"#utility.yul\":3790:3807   */\n      add\n        /* \"#utility.yul\":3783:3830   */\n      mstore\n        /* \"#utility.yul\":3847:3978   */\n      tag_147\n        /* \"#utility.yul\":3973:3977   */\n      dup2\n        /* \"#utility.yul\":3847:3978   */\n      tag_125\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3839:3978   */\n      swap1\n      pop\n        /* \"#utility.yul\":3737:3985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3991:4410   */\n    tag_41:\n        /* \"#utility.yul\":4157:4161   */\n      0x00\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4184:4193   */\n      dup3\n        /* \"#utility.yul\":4180:4198   */\n      add\n        /* \"#utility.yul\":4172:4198   */\n      swap1\n      pop\n        /* \"#utility.yul\":4244:4253   */\n      dup2\n        /* \"#utility.yul\":4238:4242   */\n      dup2\n        /* \"#utility.yul\":4234:4254   */\n      sub\n        /* \"#utility.yul\":4230:4231   */\n      0x00\n        /* \"#utility.yul\":4219:4228   */\n      dup4\n        /* \"#utility.yul\":4215:4232   */\n      add\n        /* \"#utility.yul\":4208:4255   */\n      mstore\n        /* \"#utility.yul\":4272:4403   */\n      tag_149\n        /* \"#utility.yul\":4398:4402   */\n      dup2\n        /* \"#utility.yul\":4272:4403   */\n      tag_130\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4264:4403   */\n      swap1\n      pop\n        /* \"#utility.yul\":4162:4410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4416:4638   */\n    tag_23:\n        /* \"#utility.yul\":4509:4513   */\n      0x00\n        /* \"#utility.yul\":4547:4549   */\n      0x20\n        /* \"#utility.yul\":4536:4545   */\n      dup3\n        /* \"#utility.yul\":4532:4550   */\n      add\n        /* \"#utility.yul\":4524:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4560:4631   */\n      tag_151\n        /* \"#utility.yul\":4628:4629   */\n      0x00\n        /* \"#utility.yul\":4617:4626   */\n      dup4\n        /* \"#utility.yul\":4613:4630   */\n      add\n        /* \"#utility.yul\":4604:4610   */\n      dup5\n        /* \"#utility.yul\":4560:4631   */\n      tag_135\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4514:4638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4644:4743   */\n    tag_112:\n        /* \"#utility.yul\":4696:4702   */\n      0x00\n        /* \"#utility.yul\":4730:4735   */\n      dup2\n        /* \"#utility.yul\":4724:4736   */\n      mload\n        /* \"#utility.yul\":4714:4736   */\n      swap1\n      pop\n        /* \"#utility.yul\":4703:4743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4749:4918   */\n    tag_114:\n        /* \"#utility.yul\":4833:4844   */\n      0x00\n        /* \"#utility.yul\":4867:4873   */\n      dup3\n        /* \"#utility.yul\":4862:4865   */\n      dup3\n        /* \"#utility.yul\":4855:4874   */\n      mstore\n        /* \"#utility.yul\":4907:4911   */\n      0x20\n        /* \"#utility.yul\":4902:4905   */\n      dup3\n        /* \"#utility.yul\":4898:4912   */\n      add\n        /* \"#utility.yul\":4883:4912   */\n      swap1\n      pop\n        /* \"#utility.yul\":4845:4918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4924:5072   */\n    tag_123:\n        /* \"#utility.yul\":5026:5037   */\n      0x00\n        /* \"#utility.yul\":5063:5066   */\n      dup2\n        /* \"#utility.yul\":5048:5066   */\n      swap1\n      pop\n        /* \"#utility.yul\":5038:5072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5078:5383   */\n    tag_86:\n        /* \"#utility.yul\":5118:5121   */\n      0x00\n        /* \"#utility.yul\":5137:5157   */\n      tag_156\n        /* \"#utility.yul\":5155:5156   */\n      dup3\n        /* \"#utility.yul\":5137:5157   */\n      tag_138\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5132:5157   */\n      swap2\n      pop\n        /* \"#utility.yul\":5171:5191   */\n      tag_157\n        /* \"#utility.yul\":5189:5190   */\n      dup4\n        /* \"#utility.yul\":5171:5191   */\n      tag_138\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5166:5191   */\n      swap3\n      pop\n        /* \"#utility.yul\":5325:5326   */\n      dup3\n        /* \"#utility.yul\":5257:5323   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5253:5327   */\n      sub\n        /* \"#utility.yul\":5250:5251   */\n      dup3\n        /* \"#utility.yul\":5247:5328   */\n      gt\n        /* \"#utility.yul\":5244:5246   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":5331:5349   */\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5244:5246   */\n    tag_158:\n        /* \"#utility.yul\":5375:5376   */\n      dup3\n        /* \"#utility.yul\":5372:5373   */\n      dup3\n        /* \"#utility.yul\":5368:5377   */\n      add\n        /* \"#utility.yul\":5361:5377   */\n      swap1\n      pop\n        /* \"#utility.yul\":5122:5383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5389:5574   */\n    tag_76:\n        /* \"#utility.yul\":5429:5430   */\n      0x00\n        /* \"#utility.yul\":5446:5466   */\n      tag_162\n        /* \"#utility.yul\":5464:5465   */\n      dup3\n        /* \"#utility.yul\":5446:5466   */\n      tag_138\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5441:5466   */\n      swap2\n      pop\n        /* \"#utility.yul\":5480:5500   */\n      tag_163\n        /* \"#utility.yul\":5498:5499   */\n      dup4\n        /* \"#utility.yul\":5480:5500   */\n      tag_138\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5475:5500   */\n      swap3\n      pop\n        /* \"#utility.yul\":5519:5520   */\n      dup3\n        /* \"#utility.yul\":5509:5511   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":5524:5542   */\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5509:5511   */\n    tag_164:\n        /* \"#utility.yul\":5566:5567   */\n      dup3\n        /* \"#utility.yul\":5563:5564   */\n      dup3\n        /* \"#utility.yul\":5559:5568   */\n      div\n        /* \"#utility.yul\":5554:5568   */\n      swap1\n      pop\n        /* \"#utility.yul\":5431:5574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5580:5771   */\n    tag_82:\n        /* \"#utility.yul\":5620:5624   */\n      0x00\n        /* \"#utility.yul\":5640:5660   */\n      tag_168\n        /* \"#utility.yul\":5658:5659   */\n      dup3\n        /* \"#utility.yul\":5640:5660   */\n      tag_138\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5635:5660   */\n      swap2\n      pop\n        /* \"#utility.yul\":5674:5694   */\n      tag_169\n        /* \"#utility.yul\":5692:5693   */\n      dup4\n        /* \"#utility.yul\":5674:5694   */\n      tag_138\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5669:5694   */\n      swap3\n      pop\n        /* \"#utility.yul\":5713:5714   */\n      dup3\n        /* \"#utility.yul\":5710:5711   */\n      dup3\n        /* \"#utility.yul\":5707:5715   */\n      lt\n        /* \"#utility.yul\":5704:5706   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":5718:5736   */\n      tag_171\n      tag_160\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5704:5706   */\n    tag_170:\n        /* \"#utility.yul\":5763:5764   */\n      dup3\n        /* \"#utility.yul\":5760:5761   */\n      dup3\n        /* \"#utility.yul\":5756:5765   */\n      sub\n        /* \"#utility.yul\":5748:5765   */\n      swap1\n      pop\n        /* \"#utility.yul\":5625:5771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5777:5873   */\n    tag_108:\n        /* \"#utility.yul\":5814:5821   */\n      0x00\n        /* \"#utility.yul\":5843:5867   */\n      tag_173\n        /* \"#utility.yul\":5861:5866   */\n      dup3\n        /* \"#utility.yul\":5843:5867   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5832:5867   */\n      swap1\n      pop\n        /* \"#utility.yul\":5822:5873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5879:6005   */\n    tag_174:\n        /* \"#utility.yul\":5916:5923   */\n      0x00\n        /* \"#utility.yul\":5956:5998   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5949:5954   */\n      dup3\n        /* \"#utility.yul\":5945:5999   */\n      and\n        /* \"#utility.yul\":5934:5999   */\n      swap1\n      pop\n        /* \"#utility.yul\":5924:6005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6011:6088   */\n    tag_138:\n        /* \"#utility.yul\":6048:6055   */\n      0x00\n        /* \"#utility.yul\":6077:6082   */\n      dup2\n        /* \"#utility.yul\":6066:6082   */\n      swap1\n      pop\n        /* \"#utility.yul\":6056:6088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6094:6401   */\n    tag_116:\n        /* \"#utility.yul\":6162:6163   */\n      0x00\n        /* \"#utility.yul\":6172:6285   */\n    tag_178:\n        /* \"#utility.yul\":6186:6192   */\n      dup4\n        /* \"#utility.yul\":6183:6184   */\n      dup2\n        /* \"#utility.yul\":6180:6193   */\n      lt\n        /* \"#utility.yul\":6172:6285   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":6271:6272   */\n      dup1\n        /* \"#utility.yul\":6266:6269   */\n      dup3\n        /* \"#utility.yul\":6262:6273   */\n      add\n        /* \"#utility.yul\":6256:6274   */\n      mload\n        /* \"#utility.yul\":6252:6253   */\n      dup2\n        /* \"#utility.yul\":6247:6250   */\n      dup5\n        /* \"#utility.yul\":6243:6254   */\n      add\n        /* \"#utility.yul\":6236:6275   */\n      mstore\n        /* \"#utility.yul\":6208:6210   */\n      0x20\n        /* \"#utility.yul\":6205:6206   */\n      dup2\n        /* \"#utility.yul\":6201:6211   */\n      add\n        /* \"#utility.yul\":6196:6211   */\n      swap1\n      pop\n        /* \"#utility.yul\":6172:6285   */\n      jump(tag_178)\n    tag_180:\n        /* \"#utility.yul\":6303:6309   */\n      dup4\n        /* \"#utility.yul\":6300:6301   */\n      dup2\n        /* \"#utility.yul\":6297:6310   */\n      gt\n        /* \"#utility.yul\":6294:6296   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":6383:6384   */\n      0x00\n        /* \"#utility.yul\":6374:6380   */\n      dup5\n        /* \"#utility.yul\":6369:6372   */\n      dup5\n        /* \"#utility.yul\":6365:6381   */\n      add\n        /* \"#utility.yul\":6358:6385   */\n      mstore\n        /* \"#utility.yul\":6294:6296   */\n    tag_181:\n        /* \"#utility.yul\":6143:6401   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6407:6727   */\n    tag_33:\n        /* \"#utility.yul\":6451:6457   */\n      0x00\n        /* \"#utility.yul\":6488:6489   */\n      0x02\n        /* \"#utility.yul\":6482:6486   */\n      dup3\n        /* \"#utility.yul\":6478:6490   */\n      div\n        /* \"#utility.yul\":6468:6490   */\n      swap1\n      pop\n        /* \"#utility.yul\":6535:6536   */\n      0x01\n        /* \"#utility.yul\":6529:6533   */\n      dup3\n        /* \"#utility.yul\":6525:6537   */\n      and\n        /* \"#utility.yul\":6556:6574   */\n      dup1\n        /* \"#utility.yul\":6546:6548   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":6612:6616   */\n      0x7f\n        /* \"#utility.yul\":6604:6610   */\n      dup3\n        /* \"#utility.yul\":6600:6617   */\n      and\n        /* \"#utility.yul\":6590:6617   */\n      swap2\n      pop\n        /* \"#utility.yul\":6546:6548   */\n    tag_183:\n        /* \"#utility.yul\":6674:6676   */\n      0x20\n        /* \"#utility.yul\":6666:6672   */\n      dup3\n        /* \"#utility.yul\":6663:6677   */\n      lt\n        /* \"#utility.yul\":6643:6661   */\n      dup2\n        /* \"#utility.yul\":6640:6678   */\n      eq\n        /* \"#utility.yul\":6637:6639   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":6693:6711   */\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":6637:6639   */\n    tag_184:\n        /* \"#utility.yul\":6458:6727   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6733:6966   */\n    tag_74:\n        /* \"#utility.yul\":6772:6775   */\n      0x00\n        /* \"#utility.yul\":6795:6819   */\n      tag_188\n        /* \"#utility.yul\":6813:6818   */\n      dup3\n        /* \"#utility.yul\":6795:6819   */\n      tag_138\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6786:6819   */\n      swap2\n      pop\n        /* \"#utility.yul\":6841:6907   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6834:6839   */\n      dup3\n        /* \"#utility.yul\":6831:6908   */\n      eq\n        /* \"#utility.yul\":6828:6830   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":6911:6929   */\n      tag_190\n      tag_160\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6828:6830   */\n    tag_189:\n        /* \"#utility.yul\":6958:6959   */\n      0x01\n        /* \"#utility.yul\":6951:6956   */\n      dup3\n        /* \"#utility.yul\":6947:6960   */\n      add\n        /* \"#utility.yul\":6940:6960   */\n      swap1\n      pop\n        /* \"#utility.yul\":6776:6966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6972:7148   */\n    tag_84:\n        /* \"#utility.yul\":7004:7005   */\n      0x00\n        /* \"#utility.yul\":7021:7041   */\n      tag_192\n        /* \"#utility.yul\":7039:7040   */\n      dup3\n        /* \"#utility.yul\":7021:7041   */\n      tag_138\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7016:7041   */\n      swap2\n      pop\n        /* \"#utility.yul\":7055:7075   */\n      tag_193\n        /* \"#utility.yul\":7073:7074   */\n      dup4\n        /* \"#utility.yul\":7055:7075   */\n      tag_138\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7050:7075   */\n      swap3\n      pop\n        /* \"#utility.yul\":7094:7095   */\n      dup3\n        /* \"#utility.yul\":7084:7086   */\n      tag_194\n      jumpi\n        /* \"#utility.yul\":7099:7117   */\n      tag_195\n      tag_166\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7084:7086   */\n    tag_194:\n        /* \"#utility.yul\":7140:7141   */\n      dup3\n        /* \"#utility.yul\":7137:7138   */\n      dup3\n        /* \"#utility.yul\":7133:7142   */\n      mod\n        /* \"#utility.yul\":7128:7142   */\n      swap1\n      pop\n        /* \"#utility.yul\":7006:7148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7154:7334   */\n    tag_160:\n        /* \"#utility.yul\":7202:7279   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7199:7200   */\n      0x00\n        /* \"#utility.yul\":7192:7280   */\n      mstore\n        /* \"#utility.yul\":7299:7303   */\n      0x11\n        /* \"#utility.yul\":7296:7297   */\n      0x04\n        /* \"#utility.yul\":7289:7304   */\n      mstore\n        /* \"#utility.yul\":7323:7327   */\n      0x24\n        /* \"#utility.yul\":7320:7321   */\n      0x00\n        /* \"#utility.yul\":7313:7328   */\n      revert\n        /* \"#utility.yul\":7340:7520   */\n    tag_166:\n        /* \"#utility.yul\":7388:7465   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7385:7386   */\n      0x00\n        /* \"#utility.yul\":7378:7466   */\n      mstore\n        /* \"#utility.yul\":7485:7489   */\n      0x12\n        /* \"#utility.yul\":7482:7483   */\n      0x04\n        /* \"#utility.yul\":7475:7490   */\n      mstore\n        /* \"#utility.yul\":7509:7513   */\n      0x24\n        /* \"#utility.yul\":7506:7507   */\n      0x00\n        /* \"#utility.yul\":7499:7514   */\n      revert\n        /* \"#utility.yul\":7526:7706   */\n    tag_186:\n        /* \"#utility.yul\":7574:7651   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7571:7572   */\n      0x00\n        /* \"#utility.yul\":7564:7652   */\n      mstore\n        /* \"#utility.yul\":7671:7675   */\n      0x22\n        /* \"#utility.yul\":7668:7669   */\n      0x04\n        /* \"#utility.yul\":7661:7676   */\n      mstore\n        /* \"#utility.yul\":7695:7699   */\n      0x24\n        /* \"#utility.yul\":7692:7693   */\n      0x00\n        /* \"#utility.yul\":7685:7700   */\n      revert\n        /* \"#utility.yul\":7712:7814   */\n    tag_118:\n        /* \"#utility.yul\":7753:7759   */\n      0x00\n        /* \"#utility.yul\":7804:7806   */\n      0x1f\n        /* \"#utility.yul\":7800:7807   */\n      not\n        /* \"#utility.yul\":7795:7797   */\n      0x1f\n        /* \"#utility.yul\":7788:7793   */\n      dup4\n        /* \"#utility.yul\":7784:7798   */\n      add\n        /* \"#utility.yul\":7780:7808   */\n      and\n        /* \"#utility.yul\":7770:7808   */\n      swap1\n      pop\n        /* \"#utility.yul\":7760:7814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7820:8048   */\n    tag_129:\n        /* \"#utility.yul\":7960:7994   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7956:7957   */\n      0x00\n        /* \"#utility.yul\":7948:7954   */\n      dup3\n        /* \"#utility.yul\":7944:7958   */\n      add\n        /* \"#utility.yul\":7937:7995   */\n      mstore\n        /* \"#utility.yul\":8029:8040   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8024:8026   */\n      0x20\n        /* \"#utility.yul\":8016:8022   */\n      dup3\n        /* \"#utility.yul\":8012:8027   */\n      add\n        /* \"#utility.yul\":8005:8041   */\n      mstore\n        /* \"#utility.yul\":7926:8048   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8054:8228   */\n    tag_134:\n        /* \"#utility.yul\":8194:8220   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":8190:8191   */\n      0x00\n        /* \"#utility.yul\":8182:8188   */\n      dup3\n        /* \"#utility.yul\":8178:8192   */\n      add\n        /* \"#utility.yul\":8171:8221   */\n      mstore\n        /* \"#utility.yul\":8160:8228   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8234:8356   */\n    tag_94:\n        /* \"#utility.yul\":8307:8331   */\n      tag_203\n        /* \"#utility.yul\":8325:8330   */\n      dup2\n        /* \"#utility.yul\":8307:8331   */\n      tag_108\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8300:8305   */\n      dup2\n        /* \"#utility.yul\":8297:8332   */\n      eq\n        /* \"#utility.yul\":8287:8289   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":8346:8347   */\n      0x00\n        /* \"#utility.yul\":8343:8344   */\n      dup1\n        /* \"#utility.yul\":8336:8348   */\n      revert\n        /* \"#utility.yul\":8287:8289   */\n    tag_204:\n        /* \"#utility.yul\":8277:8356   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8362:8484   */\n    tag_98:\n        /* \"#utility.yul\":8435:8459   */\n      tag_206\n        /* \"#utility.yul\":8453:8458   */\n      dup2\n        /* \"#utility.yul\":8435:8459   */\n      tag_138\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8428:8433   */\n      dup2\n        /* \"#utility.yul\":8425:8460   */\n      eq\n        /* \"#utility.yul\":8415:8417   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":8474:8475   */\n      0x00\n        /* \"#utility.yul\":8471:8472   */\n      dup1\n        /* \"#utility.yul\":8464:8476   */\n      revert\n        /* \"#utility.yul\":8415:8417   */\n    tag_207:\n        /* \"#utility.yul\":8405:8484   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f631ac243d086c5d6ebc2caae2018b5507aeeb33c709d4d5b2752d20e1c2f5a364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3266:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:259:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:8"
															},
															"nodeType": "YulIf",
															"src": "262:2:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "338:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "343:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "348:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "316:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:39:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:8",
														"type": ""
													}
												],
												"src": "7:354:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:215:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "503:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "512:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "515:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "505:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "505:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "505:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "482:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "490:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "478:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "478:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "497:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "474:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "474:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "467:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:35:8"
															},
															"nodeType": "YulIf",
															"src": "464:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "528:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "548:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "542:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "532:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "636:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "644:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "632:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "651:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "659:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "573:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "564:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "432:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "440:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "448:5:8",
														"type": ""
													}
												],
												"src": "381:288:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "789:538:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "835:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "844:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "847:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "837:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "837:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "837:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "810:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "819:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "806:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "806:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "831:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "802:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "802:32:8"
															},
															"nodeType": "YulIf",
															"src": "799:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "861:224:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "876:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "900:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "911:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "896:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "896:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "890:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "890:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "880:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "961:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "970:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "973:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "963:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "963:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "933:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "941:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "930:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "927:2:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "991:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1047:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1058:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1043:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1043:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1067:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1001:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1001:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "991:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1095:225:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1134:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1145:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1130:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1130:18:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1124:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:25:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1196:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1205:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1208:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1198:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1198:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1198:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1176:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1165:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1165:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "1162:2:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1226:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1282:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1293:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1278:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1278:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1236:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1236:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1226:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "751:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "762:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "774:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "782:6:8",
														"type": ""
													}
												],
												"src": "675:652:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1374:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1384:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1394:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1443:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1451:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1423:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1423:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1423:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1367:6:8",
														"type": ""
													}
												],
												"src": "1333:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1508:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1518:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1534:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1528:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1501:6:8",
														"type": ""
													}
												],
												"src": "1468:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1721:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1723:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1723:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1723:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1693:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1701:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1690:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:30:8"
															},
															"nodeType": "YulIf",
															"src": "1687:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1753:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1783:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1761:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1753:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1827:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1839:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1845:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1835:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1835:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1827:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1600:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1611:4:8",
														"type": ""
													}
												],
												"src": "1549:308:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1922:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1931:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1926:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1991:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2016:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2021:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2012:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2012:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2035:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2040:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2031:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2031:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2025:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2025:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2005:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2005:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2005:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1952:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1955:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1949:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1963:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1965:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1974:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1977:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1970:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1970:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1965:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1945:3:8",
																"statements": []
															},
															"src": "1941:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2088:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2138:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2143:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2134:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2134:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2152:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2127:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2127:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2127:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2069:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2072:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2066:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:13:8"
															},
															"nodeType": "YulIf",
															"src": "2063:2:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1894:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1899:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1904:6:8",
														"type": ""
													}
												],
												"src": "1863:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2237:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2251:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2257:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2268:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2298:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2304:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2294:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2272:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2345:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2359:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2373:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2381:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2369:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2369:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2359:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2325:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:26:8"
															},
															"nodeType": "YulIf",
															"src": "2315:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2448:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2462:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2412:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2443:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2432:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2432:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2409:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:38:8"
															},
															"nodeType": "YulIf",
															"src": "2406:2:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2211:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2220:6:8",
														"type": ""
													}
												],
												"src": "2176:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2555:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2577:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2607:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2585:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2585:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2573:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2559:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2724:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2726:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2667:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2679:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2664:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2664:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2703:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2715:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2700:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2661:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:62:8"
															},
															"nodeType": "YulIf",
															"src": "2658:2:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2762:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2766:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2755:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2755:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2755:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2531:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2539:4:8",
														"type": ""
													}
												],
												"src": "2502:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2817:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2834:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2827:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2827:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2931:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2924:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2955:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2958:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2948:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2948:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2789:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3003:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3020:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3023:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3013:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3013:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3013:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3117:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3120:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3110:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3110:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3141:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3144:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3134:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3134:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2975:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3209:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3219:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3244:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3233:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3233:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3253:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3249:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3229:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3219:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3192:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3202:6:8",
														"type": ""
													}
												],
												"src": "3161:102:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000f9c38038062000f9c833981810160405281019062000037919062000193565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610c1680620003866000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806306fdde031461005c5780636352211e1461007a57806370a08231146100aa57806395d89b41146100da578063c87b56dd146100f8575b600080fd5b610064610128565b6040516100719190610822565b60405180910390f35b610094600480360381019061008f91906106ec565b6101ba565b6040516100a19190610807565b60405180910390f35b6100c460048036038101906100bf91906106c3565b61026c565b6040516100d19190610884565b60405180910390f35b6100e2610324565b6040516100ef9190610822565b60405180910390f35b610112600480360381019061010d91906106ec565b6103b6565b60405161011f9190610822565b60405180910390f35b606060008054610137906109f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610163906109f0565b80156101b05780601f10610185576101008083540402835291602001916101b0565b820191906000526020600020905b81548152906001019060200180831161019357829003601f168201915b5050505050905090565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025a90610864565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d490610844565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610333906109f0565b80601f016020809104026020016040519081016040528092919081815260200182805461035f906109f0565b80156103ac5780601f10610381576101008083540402835291602001916103ac565b820191906000526020600020905b81548152906001019060200180831161038f57829003601f168201915b5050505050905090565b60606103c18261041e565b60006103cb610469565b905060008151116103eb5760405180602001604052806000815250610416565b806103f584610480565b6040516020016104069291906107e3565b6040516020818303038152906040525b915050919050565b6104278161062d565b610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90610864565b60405180910390fd5b50565b606060405180602001604052806000815250905090565b606060008214156104c8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610628565b600082905060005b600082146104fa5780806104e390610a22565b915050600a826104f3919061091c565b91506104d0565b60008167ffffffffffffffff81111561053c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561056e5781602001600182028036833780820191505090505b5090505b6000851461062157600182610587919061094d565b9150600a856105969190610a6b565b60306105a291906108c6565b60f81b8183815181106105de577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561061a919061091c565b9450610572565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6000813590506106a881610bb2565b92915050565b6000813590506106bd81610bc9565b92915050565b6000602082840312156106d557600080fd5b60006106e384828501610699565b91505092915050565b6000602082840312156106fe57600080fd5b600061070c848285016106ae565b91505092915050565b61071e81610981565b82525050565b600061072f8261089f565b61073981856108aa565b93506107498185602086016109bd565b61075281610b29565b840191505092915050565b60006107688261089f565b61077281856108bb565b93506107828185602086016109bd565b80840191505092915050565b600061079b6029836108aa565b91506107a682610b3a565b604082019050919050565b60006107be6018836108aa565b91506107c982610b89565b602082019050919050565b6107dd816109b3565b82525050565b60006107ef828561075d565b91506107fb828461075d565b91508190509392505050565b600060208201905061081c6000830184610715565b92915050565b6000602082019050818103600083015261083c8184610724565b905092915050565b6000602082019050818103600083015261085d8161078e565b9050919050565b6000602082019050818103600083015261087d816107b1565b9050919050565b600060208201905061089960008301846107d4565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006108d1826109b3565b91506108dc836109b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561091157610910610a9c565b5b828201905092915050565b6000610927826109b3565b9150610932836109b3565b92508261094257610941610acb565b5b828204905092915050565b6000610958826109b3565b9150610963836109b3565b92508282101561097657610975610a9c565b5b828203905092915050565b600061098c82610993565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156109db5780820151818401526020810190506109c0565b838111156109ea576000848401525b50505050565b60006002820490506001821680610a0857607f821691505b60208210811415610a1c57610a1b610afa565b5b50919050565b6000610a2d826109b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a6057610a5f610a9c565b5b600182019050919050565b6000610a76826109b3565b9150610a81836109b3565b925082610a9157610a90610acb565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b610bbb81610981565b8114610bc657600080fd5b50565b610bd2816109b3565b8114610bdd57600080fd5b5056fea2646970667358221220f631ac243d086c5d6ebc2caae2018b5507aeeb33c709d4d5b2752d20e1c2f5a364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF9C CODESIZE SUB DUP1 PUSH3 0xF9C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x193 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x376 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x29B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x22F JUMP JUMPDEST PUSH3 0x206 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x265 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D0 DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FC DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x212 PUSH3 0x225 JUMP JUMPDEST SWAP1 POP PUSH3 0x220 DUP3 DUP3 PUSH3 0x2D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x336 JUMP JUMPDEST JUMPDEST PUSH3 0x258 DUP3 PUSH3 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x285 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x268 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x295 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CB JUMPI PUSH3 0x2CA PUSH3 0x307 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DC DUP3 PUSH3 0x365 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2FE JUMPI PUSH3 0x2FD PUSH3 0x336 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC16 DUP1 PUSH3 0x386 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x137 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x163 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x185 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x193 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D4 SWAP1 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x333 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35F SWAP1 PUSH2 0x9F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x381 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3C1 DUP3 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB PUSH2 0x469 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x416 JUMP JUMPDEST DUP1 PUSH2 0x3F5 DUP5 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x406 SWAP3 SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45D SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x628 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x4FA JUMPI DUP1 DUP1 PUSH2 0x4E3 SWAP1 PUSH2 0xA22 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x91C JUMP JUMPDEST SWAP2 POP PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x56E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x621 JUMPI PUSH1 0x1 DUP3 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x94D JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x30 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5DE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x91C JUMP JUMPDEST SWAP5 POP PUSH2 0x572 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A8 DUP2 PUSH2 0xBB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BD DUP2 PUSH2 0xBC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6E3 DUP5 DUP3 DUP6 ADD PUSH2 0x699 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP5 DUP3 DUP6 ADD PUSH2 0x6AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71E DUP2 PUSH2 0x981 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72F DUP3 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x739 DUP2 DUP6 PUSH2 0x8AA JUMP JUMPDEST SWAP4 POP PUSH2 0x749 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x752 DUP2 PUSH2 0xB29 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 DUP3 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x772 DUP2 DUP6 PUSH2 0x8BB JUMP JUMPDEST SWAP4 POP PUSH2 0x782 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9BD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79B PUSH1 0x29 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP2 POP PUSH2 0x7A6 DUP3 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BE PUSH1 0x18 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP2 POP PUSH2 0x7C9 DUP3 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DD DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EF DUP3 DUP6 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH2 0x7FB DUP3 DUP5 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x715 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x83C DUP2 DUP5 PUSH2 0x724 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x85D DUP2 PUSH2 0x78E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x87D DUP2 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x899 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D1 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DC DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x911 JUMPI PUSH2 0x910 PUSH2 0xA9C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x927 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x932 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x942 JUMPI PUSH2 0x941 PUSH2 0xACB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x958 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x963 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x976 JUMPI PUSH2 0x975 PUSH2 0xA9C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98C DUP3 PUSH2 0x993 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9C0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xA08 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0xAFA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2D DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xA60 JUMPI PUSH2 0xA5F PUSH2 0xA9C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA76 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0xA81 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0xACB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xBBB DUP2 PUSH2 0x981 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP2 EQ PUSH2 0xBDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 BALANCE 0xAC 0x24 RETURNDATASIZE ADDMOD PUSH13 0x5D6EBC2CAAE2018B5507AEEB33 0xC7 MULMOD 0xD4 0xD5 0xB2 PUSH22 0x2D20E1C2F5A364736F6C634300080400330000000000 ",
							"sourceMap": "608:14157:0:-:0;;;1387:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1462:5;1454;:13;;;;;;;;;;;;:::i;:::-;;1488:7;1478;:17;;;;;;;;;;;;:::i;:::-;;1387:116;;608:14157;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:8:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;448:5;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:652::-;774:6;782;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;911:1;900:9;896:17;890:24;941:18;933:6;930:30;927:2;;;973:1;970;963:12;927:2;1001:74;1067:7;1058:6;1047:9;1043:22;1001:74;:::i;:::-;991:84;;861:224;1145:2;1134:9;1130:18;1124:25;1176:18;1168:6;1165:30;1162:2;;;1208:1;1205;1198:12;1162:2;1236:74;1302:7;1293:6;1282:9;1278:22;1236:74;:::i;:::-;1226:84;;1095:225;789:538;;;;;:::o;1333:129::-;1367:6;1394:20;;:::i;:::-;1384:30;;1423:33;1451:4;1443:6;1423:33;:::i;:::-;1374:88;;;:::o;1468:75::-;1501:6;1534:2;1528:9;1518:19;;1508:35;:::o;1549:308::-;1611:4;1701:18;1693:6;1690:30;1687:2;;;1723:18;;:::i;:::-;1687:2;1761:29;1783:6;1761:29;:::i;:::-;1753:37;;1845:4;1839;1835:15;1827:23;;1616:241;;;:::o;1863:307::-;1931:1;1941:113;1955:6;1952:1;1949:13;1941:113;;;2040:1;2035:3;2031:11;2025:18;2021:1;2016:3;2012:11;2005:39;1977:2;1974:1;1970:10;1965:15;;1941:113;;;2072:6;2069:1;2066:13;2063:2;;;2152:1;2143:6;2138:3;2134:16;2127:27;2063:2;1912:258;;;;:::o;2176:320::-;2220:6;2257:1;2251:4;2247:12;2237:22;;2304:1;2298:4;2294:12;2325:18;2315:2;;2381:4;2373:6;2369:17;2359:27;;2315:2;2443;2435:6;2432:14;2412:18;2409:38;2406:2;;;2462:18;;:::i;:::-;2406:2;2227:269;;;;:::o;2502:281::-;2585:27;2607:4;2585:27;:::i;:::-;2577:6;2573:40;2715:6;2703:10;2700:22;2679:18;2667:10;2664:34;2661:62;2658:2;;;2726:18;;:::i;:::-;2658:2;2766:10;2762:2;2755:22;2545:238;;;:::o;2789:180::-;2837:77;2834:1;2827:88;2934:4;2931:1;2924:15;2958:4;2955:1;2948:15;2975:180;3023:77;3020:1;3013:88;3120:4;3117:1;3110:15;3144:4;3141:1;3134:15;3161:102;3202:6;3253:2;3249:7;3244:2;3237:5;3233:14;3229:28;3219:38;;3209:54;;;:::o;608:14157:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8487:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "7:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:8",
														"type": ""
													}
												],
												"src": "152:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:8"
															},
															"nodeType": "YulIf",
															"src": "373:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:8",
														"type": ""
													}
												],
												"src": "297:262:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "631:196:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "677:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "686:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "679:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "679:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "679:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "652:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "661:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "648:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "648:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "644:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:32:8"
															},
															"nodeType": "YulIf",
															"src": "641:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "703:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "718:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "732:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "722:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "747:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "782:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "793:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "778:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "778:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "802:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "757:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "747:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "601:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "612:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "624:6:8",
														"type": ""
													}
												],
												"src": "565:262:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "915:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "938:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "920:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "920:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "908:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "908:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "886:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "893:3:8",
														"type": ""
													}
												],
												"src": "833:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1049:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1059:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1106:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1073:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1063:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1121:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1187:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1192:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1128:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1234:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1230:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1230:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1248:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1253:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1208:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1269:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1280:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1307:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1285:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1285:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1276:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1276:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1269:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1030:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1037:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1045:3:8",
														"type": ""
													}
												],
												"src": "957:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1437:267:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1447:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1494:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1461:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1461:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1451:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1509:96:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1593:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1598:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1516:76:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:89:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1509:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1640:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1647:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1654:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1659:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1614:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1614:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1614:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1675:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1686:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1691:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1682:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1675:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1418:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1425:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1433:3:8",
														"type": ""
													}
												],
												"src": "1327:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1856:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1866:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1932:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1937:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1873:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2038:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																	"nodeType": "YulIdentifier",
																	"src": "1949:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1949:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2051:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2062:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2067:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2058:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2058:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2051:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1844:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1852:3:8",
														"type": ""
													}
												],
												"src": "1710:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2304:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2309:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2245:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2245:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2238:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2410:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																	"nodeType": "YulIdentifier",
																	"src": "2321:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2321:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2321:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2423:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2434:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2439:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2430:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2423:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2216:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2224:3:8",
														"type": ""
													}
												],
												"src": "2082:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2519:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2559:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2541:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2541:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2529:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2529:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2507:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2514:3:8",
														"type": ""
													}
												],
												"src": "2454:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2762:251:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2773:102:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2862:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2871:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2780:81:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:95:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2773:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2885:102:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2974:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2983:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2892:81:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:95:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2885:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2997:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3004:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2997:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2733:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2739:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2747:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2758:3:8",
														"type": ""
													}
												],
												"src": "2578:435:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3117:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3127:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3139:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3135:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3127:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3207:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3220:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3231:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3216:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3216:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3163:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3163:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3163:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3089:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3101:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3112:4:8",
														"type": ""
													}
												],
												"src": "3019:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3365:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3375:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3387:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3383:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3375:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3422:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3433:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3418:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3418:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3441:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3447:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3437:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3437:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3411:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3411:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3467:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3539:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3548:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3475:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3475:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3467:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3337:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3349:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3360:4:8",
														"type": ""
													}
												],
												"src": "3247:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3737:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3759:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3770:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3755:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3794:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3805:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3813:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3783:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3783:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3783:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3839:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3973:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3847:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3847:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3839:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3717:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3732:4:8",
														"type": ""
													}
												],
												"src": "3566:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4162:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4172:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4184:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4180:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4172:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4219:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4230:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4215:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4215:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4238:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4244:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4234:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4234:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4208:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4264:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4398:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4272:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4264:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4142:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4157:4:8",
														"type": ""
													}
												],
												"src": "3991:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4532:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4524:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4604:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4617:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4628:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4613:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4613:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4560:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4560:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4560:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4486:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4498:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4509:4:8",
														"type": ""
													}
												],
												"src": "4416:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4703:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4714:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4730:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4724:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4686:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4696:6:8",
														"type": ""
													}
												],
												"src": "4644:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4845:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4862:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4867:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4855:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4855:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4855:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4883:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4902:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4907:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4883:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4817:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4822:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4833:11:8",
														"type": ""
													}
												],
												"src": "4749:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5038:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5048:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5063:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5048:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5010:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5015:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5026:11:8",
														"type": ""
													}
												],
												"src": "4924:148:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5122:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5132:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5155:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5137:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5137:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5132:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5166:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5189:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5171:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5166:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5329:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5331:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5331:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5331:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5250:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5257:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5325:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5253:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5253:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5247:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5247:81:8"
															},
															"nodeType": "YulIf",
															"src": "5244:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5361:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5372:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5375:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5368:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5361:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5109:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5112:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5118:3:8",
														"type": ""
													}
												],
												"src": "5078:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5431:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5441:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5464:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5446:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5446:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5441:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5475:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5498:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5480:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5475:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5522:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5524:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5524:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5524:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5519:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5512:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5512:9:8"
															},
															"nodeType": "YulIf",
															"src": "5509:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5554:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5563:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5566:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5559:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5559:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5554:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5420:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5423:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5429:1:8",
														"type": ""
													}
												],
												"src": "5389:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5625:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5635:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5658:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5640:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5635:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5669:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5692:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5674:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5669:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5716:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5718:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5718:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5718:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5710:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5713:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5707:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5707:8:8"
															},
															"nodeType": "YulIf",
															"src": "5704:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5748:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5760:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5763:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5756:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5748:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5611:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5614:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5620:4:8",
														"type": ""
													}
												],
												"src": "5580:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5822:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5832:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5861:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5843:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5843:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5832:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5804:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5814:7:8",
														"type": ""
													}
												],
												"src": "5777:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5924:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5934:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5949:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5956:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5945:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5934:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5906:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5916:7:8",
														"type": ""
													}
												],
												"src": "5879:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6056:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6066:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6077:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6066:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6038:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6048:7:8",
														"type": ""
													}
												],
												"src": "6011:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6143:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6153:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6162:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6157:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6222:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6247:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6252:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6243:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6243:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6266:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6271:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6262:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6262:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6256:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6256:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6236:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6236:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6236:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6183:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6186:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6180:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6180:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6194:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6196:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6205:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6208:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6201:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6201:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6196:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6176:3:8",
																"statements": []
															},
															"src": "6172:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6319:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6369:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6374:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6365:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6365:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6383:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6358:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6358:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6300:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6303:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6297:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6297:13:8"
															},
															"nodeType": "YulIf",
															"src": "6294:2:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6125:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6130:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6135:6:8",
														"type": ""
													}
												],
												"src": "6094:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6458:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6468:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6482:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6488:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6478:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6468:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6499:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6529:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6535:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6525:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6525:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6503:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6576:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6590:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6604:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6612:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6600:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6600:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6590:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6556:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6549:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6549:26:8"
															},
															"nodeType": "YulIf",
															"src": "6546:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6679:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6693:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6693:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6693:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6643:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6666:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6674:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6663:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6663:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6640:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6640:38:8"
															},
															"nodeType": "YulIf",
															"src": "6637:2:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6442:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6451:6:8",
														"type": ""
													}
												],
												"src": "6407:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6776:190:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6786:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6813:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6795:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6795:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6786:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6909:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6911:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6911:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6911:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6834:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6841:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6831:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:77:8"
															},
															"nodeType": "YulIf",
															"src": "6828:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6940:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6951:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6958:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6947:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6947:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6940:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6762:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6772:3:8",
														"type": ""
													}
												],
												"src": "6733:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7006:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7016:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7039:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7021:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7021:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7016:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7050:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7073:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7055:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7055:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7050:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7097:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7099:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7099:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7099:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7094:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7087:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7087:9:8"
															},
															"nodeType": "YulIf",
															"src": "7084:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7128:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7137:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7140:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7133:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7128:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6995:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6998:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7004:1:8",
														"type": ""
													}
												],
												"src": "6972:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7182:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7199:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7202:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7192:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7192:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7192:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7299:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7289:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7289:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7289:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7320:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7323:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7313:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7313:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7313:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7154:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7368:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7385:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7388:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7378:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7378:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7378:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7482:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7485:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7475:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7475:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7475:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7506:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7499:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7499:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7499:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7340:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7554:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7571:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7574:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7564:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7564:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7564:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7668:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7671:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7661:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7661:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7692:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7695:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7685:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7685:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "7526:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7760:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7770:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7788:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7795:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7784:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7784:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7804:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7800:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7800:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7780:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7780:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7770:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7743:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7753:6:8",
														"type": ""
													}
												],
												"src": "7712:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7926:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7948:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7956:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7944:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7944:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7960:34:8",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7937:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7937:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8016:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8024:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8012:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8012:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8029:11:8",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8005:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8005:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8005:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7918:6:8",
														"type": ""
													}
												],
												"src": "7820:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8160:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8182:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8190:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8178:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8178:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8194:26:8",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8171:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8171:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8171:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8152:6:8",
														"type": ""
													}
												],
												"src": "8054:174:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8277:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8334:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8343:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8346:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8336:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8336:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8336:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8300:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8325:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8307:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8307:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8297:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8297:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:43:8"
															},
															"nodeType": "YulIf",
															"src": "8287:2:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8270:5:8",
														"type": ""
													}
												],
												"src": "8234:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8405:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8462:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8471:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8474:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8464:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8464:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8464:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8428:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8453:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8435:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8435:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8425:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8425:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8418:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8418:43:8"
															},
															"nodeType": "YulIf",
															"src": "8415:2:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8398:5:8",
														"type": ""
													}
												],
												"src": "8362:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806306fdde031461005c5780636352211e1461007a57806370a08231146100aa57806395d89b41146100da578063c87b56dd146100f8575b600080fd5b610064610128565b6040516100719190610822565b60405180910390f35b610094600480360381019061008f91906106ec565b6101ba565b6040516100a19190610807565b60405180910390f35b6100c460048036038101906100bf91906106c3565b61026c565b6040516100d19190610884565b60405180910390f35b6100e2610324565b6040516100ef9190610822565b60405180910390f35b610112600480360381019061010d91906106ec565b6103b6565b60405161011f9190610822565b60405180910390f35b606060008054610137906109f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610163906109f0565b80156101b05780601f10610185576101008083540402835291602001916101b0565b820191906000526020600020905b81548152906001019060200180831161019357829003601f168201915b5050505050905090565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025a90610864565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d490610844565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054610333906109f0565b80601f016020809104026020016040519081016040528092919081815260200182805461035f906109f0565b80156103ac5780601f10610381576101008083540402835291602001916103ac565b820191906000526020600020905b81548152906001019060200180831161038f57829003601f168201915b5050505050905090565b60606103c18261041e565b60006103cb610469565b905060008151116103eb5760405180602001604052806000815250610416565b806103f584610480565b6040516020016104069291906107e3565b6040516020818303038152906040525b915050919050565b6104278161062d565b610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90610864565b60405180910390fd5b50565b606060405180602001604052806000815250905090565b606060008214156104c8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610628565b600082905060005b600082146104fa5780806104e390610a22565b915050600a826104f3919061091c565b91506104d0565b60008167ffffffffffffffff81111561053c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561056e5781602001600182028036833780820191505090505b5090505b6000851461062157600182610587919061094d565b9150600a856105969190610a6b565b60306105a291906108c6565b60f81b8183815181106105de577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561061a919061091c565b9450610572565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6000813590506106a881610bb2565b92915050565b6000813590506106bd81610bc9565b92915050565b6000602082840312156106d557600080fd5b60006106e384828501610699565b91505092915050565b6000602082840312156106fe57600080fd5b600061070c848285016106ae565b91505092915050565b61071e81610981565b82525050565b600061072f8261089f565b61073981856108aa565b93506107498185602086016109bd565b61075281610b29565b840191505092915050565b60006107688261089f565b61077281856108bb565b93506107828185602086016109bd565b80840191505092915050565b600061079b6029836108aa565b91506107a682610b3a565b604082019050919050565b60006107be6018836108aa565b91506107c982610b89565b602082019050919050565b6107dd816109b3565b82525050565b60006107ef828561075d565b91506107fb828461075d565b91508190509392505050565b600060208201905061081c6000830184610715565b92915050565b6000602082019050818103600083015261083c8184610724565b905092915050565b6000602082019050818103600083015261085d8161078e565b9050919050565b6000602082019050818103600083015261087d816107b1565b9050919050565b600060208201905061089960008301846107d4565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006108d1826109b3565b91506108dc836109b3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561091157610910610a9c565b5b828201905092915050565b6000610927826109b3565b9150610932836109b3565b92508261094257610941610acb565b5b828204905092915050565b6000610958826109b3565b9150610963836109b3565b92508282101561097657610975610a9c565b5b828203905092915050565b600061098c82610993565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156109db5780820151818401526020810190506109c0565b838111156109ea576000848401525b50505050565b60006002820490506001821680610a0857607f821691505b60208210811415610a1c57610a1b610afa565b5b50919050565b6000610a2d826109b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a6057610a5f610a9c565b5b600182019050919050565b6000610a76826109b3565b9150610a81836109b3565b925082610a9157610a90610acb565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b610bbb81610981565b8114610bc657600080fd5b50565b610bd2816109b3565b8114610bdd57600080fd5b5056fea2646970667358221220f631ac243d086c5d6ebc2caae2018b5507aeeb33c709d4d5b2752d20e1c2f5a364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xF8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x807 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x137 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x163 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x185 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x193 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D4 SWAP1 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x333 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35F SWAP1 PUSH2 0x9F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x381 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3C1 DUP3 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB PUSH2 0x469 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x416 JUMP JUMPDEST DUP1 PUSH2 0x3F5 DUP5 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x406 SWAP3 SWAP2 SWAP1 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45D SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x628 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x4FA JUMPI DUP1 DUP1 PUSH2 0x4E3 SWAP1 PUSH2 0xA22 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x91C JUMP JUMPDEST SWAP2 POP PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x56E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x621 JUMPI PUSH1 0x1 DUP3 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x94D JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x30 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5DE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x91C JUMP JUMPDEST SWAP5 POP PUSH2 0x572 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A8 DUP2 PUSH2 0xBB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BD DUP2 PUSH2 0xBC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6E3 DUP5 DUP3 DUP6 ADD PUSH2 0x699 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP5 DUP3 DUP6 ADD PUSH2 0x6AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71E DUP2 PUSH2 0x981 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72F DUP3 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x739 DUP2 DUP6 PUSH2 0x8AA JUMP JUMPDEST SWAP4 POP PUSH2 0x749 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x752 DUP2 PUSH2 0xB29 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x768 DUP3 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x772 DUP2 DUP6 PUSH2 0x8BB JUMP JUMPDEST SWAP4 POP PUSH2 0x782 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9BD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79B PUSH1 0x29 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP2 POP PUSH2 0x7A6 DUP3 PUSH2 0xB3A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BE PUSH1 0x18 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP2 POP PUSH2 0x7C9 DUP3 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DD DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EF DUP3 DUP6 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH2 0x7FB DUP3 DUP5 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x715 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x83C DUP2 DUP5 PUSH2 0x724 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x85D DUP2 PUSH2 0x78E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x87D DUP2 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x899 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D1 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DC DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x911 JUMPI PUSH2 0x910 PUSH2 0xA9C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x927 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x932 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x942 JUMPI PUSH2 0x941 PUSH2 0xACB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x958 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x963 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x976 JUMPI PUSH2 0x975 PUSH2 0xA9C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98C DUP3 PUSH2 0x993 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9C0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xA08 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0xAFA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2D DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xA60 JUMPI PUSH2 0xA5F PUSH2 0xA9C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA76 DUP3 PUSH2 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH2 0xA81 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0xACB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xBBB DUP2 PUSH2 0x981 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBD2 DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP2 EQ PUSH2 0xBDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 BALANCE 0xAC 0x24 RETURNDATASIZE ADDMOD PUSH13 0x5D6EBC2CAAE2018B5507AEEB33 0xC7 MULMOD 0xD4 0xD5 0xB2 PUSH22 0x2D20E1C2F5A364736F6C634300080400330000000000 ",
							"sourceMap": "608:14157:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2502:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2213:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1944:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2671:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2846:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2502:100;2556:13;2589:5;2582:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2502:100;:::o;2213:222::-;2285:7;2305:13;2321:7;:16;2329:7;2321:16;;;;;;;;;;;;;;;;;;;;;2305:32;;2373:1;2356:19;;:5;:19;;;;2348:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2422:5;2415:12;;;2213:222;;;:::o;1944:207::-;2016:7;2061:1;2044:19;;:5;:19;;;;2036:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2127:9;:16;2137:5;2127:16;;;;;;;;;;;;;;;;2120:23;;1944:207;;;:::o;2671:104::-;2727:13;2760:7;2753:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2671:104;:::o;2846:281::-;2919:13;2945:23;2960:7;2945:14;:23::i;:::-;2981:21;3005:10;:8;:10::i;:::-;2981:34;;3057:1;3039:7;3033:21;:25;:86;;;;;;;;;;;;;;;;;3085:7;3094:18;:7;:16;:18::i;:::-;3068:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3033:86;3026:93;;;2846:281;;;:::o;11990:135::-;12072:16;12080:7;12072;:16::i;:::-;12064:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11990:135;:::o;3376:94::-;3427:13;3453:9;;;;;;;;;;;;;;3376:94;:::o;392:723:7:-;448:13;678:1;669:5;:10;665:53;;;696:10;;;;;;;;;;;;;;;;;;;;;665:53;728:12;743:5;728:20;;759:14;784:78;799:1;791:4;:9;784:78;;817:8;;;;;:::i;:::-;;;;848:2;840:10;;;;;:::i;:::-;;;784:78;;;872:19;904:6;894:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:39;;922:154;938:1;929:5;:10;922:154;;966:1;956:11;;;;;:::i;:::-;;;1033:2;1025:5;:10;;;;:::i;:::-;1012:2;:24;;;;:::i;:::-;999:39;;982:6;989;982:14;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;1062:2;1053:11;;;;;:::i;:::-;;;922:154;;;1100:6;1086:21;;;;;392:723;;;;:::o;7208:127:0:-;7273:4;7325:1;7297:30;;:7;:16;7305:7;7297:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7290:37;;7208:127;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;624:6;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:364::-;1045:3;1073:39;1106:5;1073:39;:::i;:::-;1128:71;1192:6;1187:3;1128:71;:::i;:::-;1121:78;;1208:52;1253:6;1248:3;1241:4;1234:5;1230:16;1208:52;:::i;:::-;1285:29;1307:6;1285:29;:::i;:::-;1280:3;1276:39;1269:46;;1049:272;;;;;:::o;1327:377::-;1433:3;1461:39;1494:5;1461:39;:::i;:::-;1516:89;1598:6;1593:3;1516:89;:::i;:::-;1509:96;;1614:52;1659:6;1654:3;1647:4;1640:5;1636:16;1614:52;:::i;:::-;1691:6;1686:3;1682:16;1675:23;;1437:267;;;;;:::o;1710:366::-;1852:3;1873:67;1937:2;1932:3;1873:67;:::i;:::-;1866:74;;1949:93;2038:3;1949:93;:::i;:::-;2067:2;2062:3;2058:12;2051:19;;1856:220;;;:::o;2082:366::-;2224:3;2245:67;2309:2;2304:3;2245:67;:::i;:::-;2238:74;;2321:93;2410:3;2321:93;:::i;:::-;2439:2;2434:3;2430:12;2423:19;;2228:220;;;:::o;2454:118::-;2541:24;2559:5;2541:24;:::i;:::-;2536:3;2529:37;2519:53;;:::o;2578:435::-;2758:3;2780:95;2871:3;2862:6;2780:95;:::i;:::-;2773:102;;2892:95;2983:3;2974:6;2892:95;:::i;:::-;2885:102;;3004:3;2997:10;;2762:251;;;;;:::o;3019:222::-;3112:4;3150:2;3139:9;3135:18;3127:26;;3163:71;3231:1;3220:9;3216:17;3207:6;3163:71;:::i;:::-;3117:124;;;;:::o;3247:313::-;3360:4;3398:2;3387:9;3383:18;3375:26;;3447:9;3441:4;3437:20;3433:1;3422:9;3418:17;3411:47;3475:78;3548:4;3539:6;3475:78;:::i;:::-;3467:86;;3365:195;;;;:::o;3566:419::-;3732:4;3770:2;3759:9;3755:18;3747:26;;3819:9;3813:4;3809:20;3805:1;3794:9;3790:17;3783:47;3847:131;3973:4;3847:131;:::i;:::-;3839:139;;3737:248;;;:::o;3991:419::-;4157:4;4195:2;4184:9;4180:18;4172:26;;4244:9;4238:4;4234:20;4230:1;4219:9;4215:17;4208:47;4272:131;4398:4;4272:131;:::i;:::-;4264:139;;4162:248;;;:::o;4416:222::-;4509:4;4547:2;4536:9;4532:18;4524:26;;4560:71;4628:1;4617:9;4613:17;4604:6;4560:71;:::i;:::-;4514:124;;;;:::o;4644:99::-;4696:6;4730:5;4724:12;4714:22;;4703:40;;;:::o;4749:169::-;4833:11;4867:6;4862:3;4855:19;4907:4;4902:3;4898:14;4883:29;;4845:73;;;;:::o;4924:148::-;5026:11;5063:3;5048:18;;5038:34;;;;:::o;5078:305::-;5118:3;5137:20;5155:1;5137:20;:::i;:::-;5132:25;;5171:20;5189:1;5171:20;:::i;:::-;5166:25;;5325:1;5257:66;5253:74;5250:1;5247:81;5244:2;;;5331:18;;:::i;:::-;5244:2;5375:1;5372;5368:9;5361:16;;5122:261;;;;:::o;5389:185::-;5429:1;5446:20;5464:1;5446:20;:::i;:::-;5441:25;;5480:20;5498:1;5480:20;:::i;:::-;5475:25;;5519:1;5509:2;;5524:18;;:::i;:::-;5509:2;5566:1;5563;5559:9;5554:14;;5431:143;;;;:::o;5580:191::-;5620:4;5640:20;5658:1;5640:20;:::i;:::-;5635:25;;5674:20;5692:1;5674:20;:::i;:::-;5669:25;;5713:1;5710;5707:8;5704:2;;;5718:18;;:::i;:::-;5704:2;5763:1;5760;5756:9;5748:17;;5625:146;;;;:::o;5777:96::-;5814:7;5843:24;5861:5;5843:24;:::i;:::-;5832:35;;5822:51;;;:::o;5879:126::-;5916:7;5956:42;5949:5;5945:54;5934:65;;5924:81;;;:::o;6011:77::-;6048:7;6077:5;6066:16;;6056:32;;;:::o;6094:307::-;6162:1;6172:113;6186:6;6183:1;6180:13;6172:113;;;6271:1;6266:3;6262:11;6256:18;6252:1;6247:3;6243:11;6236:39;6208:2;6205:1;6201:10;6196:15;;6172:113;;;6303:6;6300:1;6297:13;6294:2;;;6383:1;6374:6;6369:3;6365:16;6358:27;6294:2;6143:258;;;;:::o;6407:320::-;6451:6;6488:1;6482:4;6478:12;6468:22;;6535:1;6529:4;6525:12;6556:18;6546:2;;6612:4;6604:6;6600:17;6590:27;;6546:2;6674;6666:6;6663:14;6643:18;6640:38;6637:2;;;6693:18;;:::i;:::-;6637:2;6458:269;;;;:::o;6733:233::-;6772:3;6795:24;6813:5;6795:24;:::i;:::-;6786:33;;6841:66;6834:5;6831:77;6828:2;;;6911:18;;:::i;:::-;6828:2;6958:1;6951:5;6947:13;6940:20;;6776:190;;;:::o;6972:176::-;7004:1;7021:20;7039:1;7021:20;:::i;:::-;7016:25;;7055:20;7073:1;7055:20;:::i;:::-;7050:25;;7094:1;7084:2;;7099:18;;:::i;:::-;7084:2;7140:1;7137;7133:9;7128:14;;7006:142;;;;:::o;7154:180::-;7202:77;7199:1;7192:88;7299:4;7296:1;7289:15;7323:4;7320:1;7313:15;7340:180;7388:77;7385:1;7378:88;7485:4;7482:1;7475:15;7509:4;7506:1;7499:15;7526:180;7574:77;7571:1;7564:88;7671:4;7668:1;7661:15;7695:4;7692:1;7685:15;7712:102;7753:6;7804:2;7800:7;7795:2;7788:5;7784:14;7780:28;7770:38;;7760:54;;;:::o;7820:228::-;7960:34;7956:1;7948:6;7944:14;7937:58;8029:11;8024:2;8016:6;8012:15;8005:36;7926:122;:::o;8054:174::-;8194:26;8190:1;8182:6;8178:14;8171:50;8160:68;:::o;8234:122::-;8307:24;8325:5;8307:24;:::i;:::-;8300:5;8297:35;8287:2;;8346:1;8343;8336:12;8287:2;8277:79;:::o;8362:122::-;8435:24;8453:5;8435:24;:::i;:::-;8428:5;8425:35;8415:2;;8474:1;8471;8464:12;8415:2;8405:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "618800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "1601",
								"name()": "infinite",
								"ownerOf(uint256)": "1659",
								"symbol()": "infinite",
								"tokenURI(uint256)": "2124"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "969",
								"_mint(address,uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1462,
									"end": 1467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1454,
									"end": 1467,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1488,
									"end": 1495,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1485,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1478,
									"end": 1495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1387,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 361,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 361,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 262,
									"end": 264,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 262,
									"end": 264,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 262,
									"end": 264,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 316,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 348,
									"end": 354,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 343,
									"end": 346,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 338,
									"end": 341,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 316,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 381,
									"end": 669,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 381,
									"end": 669,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 448,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 490,
									"end": 494,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 482,
									"end": 488,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 478,
									"end": 495,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 474,
									"end": 501,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 464,
									"end": 466,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 464,
									"end": 466,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 515,
									"end": 516,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 513,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 505,
									"end": 517,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 464,
									"end": 466,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 464,
									"end": 466,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 548,
									"end": 554,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 542,
									"end": 555,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 573,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 662,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 651,
									"end": 657,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 644,
									"end": 648,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 636,
									"end": 642,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 632,
									"end": 649,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 573,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 564,
									"end": 663,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 564,
									"end": 663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 675,
									"end": 1327,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 675,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 774,
									"end": 780,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 831,
									"end": 833,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 828,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 810,
									"end": 817,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 806,
									"end": 829,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 802,
									"end": 834,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 799,
									"end": 801,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 799,
									"end": 801,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 799,
									"end": 801,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 847,
									"end": 848,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 844,
									"end": 845,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 837,
									"end": 849,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 799,
									"end": 801,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 799,
									"end": 801,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 911,
									"end": 912,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 909,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 896,
									"end": 913,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 890,
									"end": 914,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 941,
									"end": 959,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 933,
									"end": 939,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 930,
									"end": 960,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 927,
									"end": 929,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 927,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 927,
									"end": 929,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 973,
									"end": 974,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 970,
									"end": 971,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 963,
									"end": 975,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 927,
									"end": 929,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 927,
									"end": 929,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1075,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1067,
									"end": 1074,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1058,
									"end": 1064,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1047,
									"end": 1056,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1065,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1075,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1075,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1001,
									"end": 1075,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1001,
									"end": 1075,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1075,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1075,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 861,
									"end": 1085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1134,
									"end": 1143,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1130,
									"end": 1148,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1149,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1176,
									"end": 1194,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1168,
									"end": 1174,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1165,
									"end": 1195,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1208,
									"end": 1209,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1206,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1236,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1302,
									"end": 1309,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1291,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1278,
									"end": 1300,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1236,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1236,
									"end": 1310,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1236,
									"end": 1310,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1236,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1226,
									"end": 1310,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1226,
									"end": 1310,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1095,
									"end": 1320,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1333,
									"end": 1462,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1333,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1367,
									"end": 1373,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1394,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1394,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1394,
									"end": 1414,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1394,
									"end": 1414,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1394,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1384,
									"end": 1414,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1384,
									"end": 1414,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1423,
									"end": 1456,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1451,
									"end": 1455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1443,
									"end": 1449,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1423,
									"end": 1456,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1423,
									"end": 1456,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1423,
									"end": 1456,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1423,
									"end": 1456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1462,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1462,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1462,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1462,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1468,
									"end": 1543,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1468,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 1507,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1534,
									"end": 1536,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1518,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1518,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1543,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1543,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1549,
									"end": 1857,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1549,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1611,
									"end": 1615,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1719,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1693,
									"end": 1699,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1687,
									"end": 1689,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1687,
									"end": 1689,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1687,
									"end": 1689,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1687,
									"end": 1689,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1687,
									"end": 1689,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1761,
									"end": 1790,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1783,
									"end": 1789,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1761,
									"end": 1790,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1761,
									"end": 1790,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1761,
									"end": 1790,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1761,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1753,
									"end": 1790,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1753,
									"end": 1790,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1845,
									"end": 1849,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1839,
									"end": 1843,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 1850,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1850,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1616,
									"end": 1857,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1616,
									"end": 1857,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1616,
									"end": 1857,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1616,
									"end": 1857,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1863,
									"end": 2170,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1863,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1955,
									"end": 1961,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1952,
									"end": 1953,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1962,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2040,
									"end": 2041,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2035,
									"end": 2038,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2031,
									"end": 2042,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2025,
									"end": 2043,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2021,
									"end": 2022,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2016,
									"end": 2019,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2012,
									"end": 2023,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1977,
									"end": 1979,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 1975,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1970,
									"end": 1980,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1980,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2072,
									"end": 2078,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2070,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2066,
									"end": 2079,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2065,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2065,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 2063,
									"end": 2065,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2153,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2143,
									"end": 2149,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2138,
									"end": 2141,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2134,
									"end": 2150,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2127,
									"end": 2154,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2065,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 2063,
									"end": 2065,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 2170,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 2170,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 2170,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 2170,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 2170,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2176,
									"end": 2496,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 2176,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2220,
									"end": 2226,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2257,
									"end": 2258,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2251,
									"end": 2255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2247,
									"end": 2259,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2237,
									"end": 2259,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2237,
									"end": 2259,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2304,
									"end": 2305,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2298,
									"end": 2302,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2294,
									"end": 2306,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2325,
									"end": 2343,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2315,
									"end": 2317,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2315,
									"end": 2317,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2381,
									"end": 2385,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2373,
									"end": 2379,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2369,
									"end": 2386,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2359,
									"end": 2386,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2359,
									"end": 2386,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2315,
									"end": 2317,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2315,
									"end": 2317,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2445,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2435,
									"end": 2441,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2432,
									"end": 2446,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2430,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2447,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2406,
									"end": 2408,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2406,
									"end": 2408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2406,
									"end": 2408,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2406,
									"end": 2408,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2406,
									"end": 2408,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2227,
									"end": 2496,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2227,
									"end": 2496,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2227,
									"end": 2496,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2227,
									"end": 2496,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2227,
									"end": 2496,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2502,
									"end": 2783,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2502,
									"end": 2783,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2607,
									"end": 2611,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2585,
									"end": 2612,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2585,
									"end": 2612,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2585,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2577,
									"end": 2583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2715,
									"end": 2721,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2703,
									"end": 2713,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2700,
									"end": 2722,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 2697,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2667,
									"end": 2677,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2664,
									"end": 2698,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2661,
									"end": 2723,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2658,
									"end": 2660,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2658,
									"end": 2660,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2658,
									"end": 2660,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2658,
									"end": 2660,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2658,
									"end": 2660,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2766,
									"end": 2776,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2762,
									"end": 2764,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2755,
									"end": 2777,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2783,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2783,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2783,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2545,
									"end": 2783,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2789,
									"end": 2969,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2789,
									"end": 2969,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2837,
									"end": 2914,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2834,
									"end": 2835,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2827,
									"end": 2915,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2934,
									"end": 2938,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2931,
									"end": 2932,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2924,
									"end": 2939,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2958,
									"end": 2962,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2955,
									"end": 2956,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2948,
									"end": 2963,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2975,
									"end": 3155,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2975,
									"end": 3155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3023,
									"end": 3100,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3020,
									"end": 3021,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3013,
									"end": 3101,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3120,
									"end": 3124,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3117,
									"end": 3118,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3110,
									"end": 3125,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3144,
									"end": 3148,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3141,
									"end": 3142,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3134,
									"end": 3149,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3161,
									"end": 3263,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3161,
									"end": 3263,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3202,
									"end": 3208,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3253,
									"end": 3255,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3249,
									"end": 3256,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3244,
									"end": 3246,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3237,
									"end": 3242,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3233,
									"end": 3247,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3229,
									"end": 3257,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3219,
									"end": 3257,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3219,
									"end": 3257,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3209,
									"end": 3263,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3209,
									"end": 3263,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3209,
									"end": 3263,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3209,
									"end": 3263,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 608,
									"end": 14765,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f631ac243d086c5d6ebc2caae2018b5507aeeb33c709d4d5b2752d20e1c2f5a364736f6c63430008040033",
									".code": [
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 14765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2589,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2602,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2285,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2348,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2435,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2016,
											"end": 2023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2044,
											"end": 2063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2044,
											"end": 2063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2063,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2036,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 2151,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2775,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2919,
											"end": 2932,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2945,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2960,
											"end": 2967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2945,
											"end": 2968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2945,
											"end": 2968,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2945,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3005,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3005,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3005,
											"end": 3015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3005,
											"end": 3015,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3005,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3058,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3033,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3127,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11990,
											"end": 12125,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 11990,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12080,
											"end": 12087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12072,
											"end": 12088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12072,
											"end": 12088,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12072,
											"end": 12088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12064,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11990,
											"end": 12125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11990,
											"end": 12125,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3376,
											"end": 3470,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3376,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3440,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3470,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 392,
											"end": 1115,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 392,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 669,
											"end": 679,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 665,
											"end": 718,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 665,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 665,
											"end": 718,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 706,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 696,
											"end": 706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 696,
											"end": 706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 696,
											"end": 706,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 665,
											"end": 718,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 665,
											"end": 718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 728,
											"end": 740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 748,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 728,
											"end": 748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 759,
											"end": 773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 862,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 784,
											"end": 862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 799,
											"end": 800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 791,
											"end": 800,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 784,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 784,
											"end": 862,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 817,
											"end": 825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 817,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 817,
											"end": 825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 817,
											"end": 825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 817,
											"end": 825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 817,
											"end": 825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 848,
											"end": 850,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 840,
											"end": 850,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 840,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 840,
											"end": 850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 840,
											"end": 850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 840,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 840,
											"end": 850,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 840,
											"end": 850,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 840,
											"end": 850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 840,
											"end": 850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 840,
											"end": 850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 784,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 784,
											"end": 862,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 784,
											"end": 862,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 784,
											"end": 862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 872,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 894,
											"end": 911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 922,
											"end": 1076,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 922,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 934,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 929,
											"end": 939,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 922,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 922,
											"end": 1076,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 966,
											"end": 967,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 956,
											"end": 967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 956,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 956,
											"end": 967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 956,
											"end": 967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 956,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 956,
											"end": 967,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 956,
											"end": 967,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 956,
											"end": 967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 956,
											"end": 967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 956,
											"end": 967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1033,
											"end": 1035,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1025,
											"end": 1030,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1025,
											"end": 1035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1025,
											"end": 1035,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1035,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1025,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1012,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1012,
											"end": 1036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1012,
											"end": 1036,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1012,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1038,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 999,
											"end": 1038,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 982,
											"end": 996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 982,
											"end": 996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 996,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 982,
											"end": 996,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 982,
											"end": 996,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 982,
											"end": 996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 996,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 982,
											"end": 996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 982,
											"end": 996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 982,
											"end": 996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1064,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 922,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 922,
											"end": 1076,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 922,
											"end": 1076,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 922,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 392,
											"end": 1115,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 392,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 392,
											"end": 1115,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 392,
											"end": 1115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 392,
											"end": 1115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 392,
											"end": 1115,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7208,
											"end": 7335,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7208,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7297,
											"end": 7327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7305,
											"end": 7312,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7297,
											"end": 7313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7297,
											"end": 7327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7327,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7335,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 827,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 565,
											"end": 827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 624,
											"end": 630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 675,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 670,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 652,
											"end": 659,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 644,
											"end": 676,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 641,
											"end": 643,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 641,
											"end": 643,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 641,
											"end": 643,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 641,
											"end": 643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 732,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 802,
											"end": 809,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 793,
											"end": 799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 778,
											"end": 800,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 757,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 747,
											"end": 810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 747,
											"end": 810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 703,
											"end": 820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 631,
											"end": 827,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 631,
											"end": 827,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 631,
											"end": 827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 631,
											"end": 827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 631,
											"end": 827,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 833,
											"end": 951,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 833,
											"end": 951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 938,
											"end": 943,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 920,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 920,
											"end": 944,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 944,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 920,
											"end": 944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 915,
											"end": 918,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 908,
											"end": 945,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 898,
											"end": 951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 951,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 957,
											"end": 1321,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 957,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1045,
											"end": 1048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1106,
											"end": 1111,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1073,
											"end": 1112,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1073,
											"end": 1112,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1073,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1128,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1190,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1128,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1128,
											"end": 1199,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1128,
											"end": 1199,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1128,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1199,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1253,
											"end": 1259,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1251,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1245,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1208,
											"end": 1260,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1208,
											"end": 1260,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1208,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1285,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1285,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1285,
											"end": 1314,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1285,
											"end": 1314,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1285,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1283,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1269,
											"end": 1315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1269,
											"end": 1315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1321,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1321,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1321,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1327,
											"end": 1704,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1327,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1436,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1494,
											"end": 1499,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1461,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1461,
											"end": 1500,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 1500,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1461,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1516,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1516,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1516,
											"end": 1605,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1516,
											"end": 1605,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1516,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1659,
											"end": 1665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1654,
											"end": 1657,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1647,
											"end": 1651,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1645,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1636,
											"end": 1652,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1614,
											"end": 1666,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1614,
											"end": 1666,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1614,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1686,
											"end": 1689,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1682,
											"end": 1698,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1698,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1704,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1704,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1704,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1710,
											"end": 2076,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 1710,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1937,
											"end": 1939,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1932,
											"end": 1935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1873,
											"end": 1940,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1940,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1873,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1940,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2038,
											"end": 2041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1949,
											"end": 2042,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 2042,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1949,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 2076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 2076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 2076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 2076,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2082,
											"end": 2448,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2082,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2304,
											"end": 2307,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2245,
											"end": 2312,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2245,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2312,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2410,
											"end": 2413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2321,
											"end": 2414,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2414,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2321,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2441,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2423,
											"end": 2442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2423,
											"end": 2442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2228,
											"end": 2448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2228,
											"end": 2448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2228,
											"end": 2448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2228,
											"end": 2448,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2454,
											"end": 2572,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2454,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2559,
											"end": 2564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2541,
											"end": 2565,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2541,
											"end": 2565,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2541,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2566,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2572,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2578,
											"end": 3013,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2578,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2758,
											"end": 2761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2871,
											"end": 2874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2780,
											"end": 2875,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2780,
											"end": 2875,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2780,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2983,
											"end": 2986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2892,
											"end": 2987,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2892,
											"end": 2987,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2892,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 3013,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 3013,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3019,
											"end": 3241,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3019,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3112,
											"end": 3116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3231,
											"end": 3232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3229,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 3163,
											"end": 3234,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3163,
											"end": 3234,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3163,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3241,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3241,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3247,
											"end": 3560,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3247,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3433,
											"end": 3434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3431,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3418,
											"end": 3435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3545,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3475,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3475,
											"end": 3553,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 3553,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3475,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3560,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3365,
											"end": 3560,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3566,
											"end": 3985,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3566,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3732,
											"end": 3736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3772,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3759,
											"end": 3768,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3755,
											"end": 3773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 3829,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3803,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3847,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3973,
											"end": 3977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3847,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 3847,
											"end": 3978,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3847,
											"end": 3978,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3847,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3737,
											"end": 3985,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3737,
											"end": 3985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3737,
											"end": 3985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3737,
											"end": 3985,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3991,
											"end": 4410,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3991,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4157,
											"end": 4161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4184,
											"end": 4193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4180,
											"end": 4198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4254,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4228,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4215,
											"end": 4232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4398,
											"end": 4402,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4272,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 4272,
											"end": 4403,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4272,
											"end": 4403,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4272,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4264,
											"end": 4403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4162,
											"end": 4410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4162,
											"end": 4410,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4162,
											"end": 4410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4162,
											"end": 4410,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4416,
											"end": 4638,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 4416,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4509,
											"end": 4513,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4560,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4628,
											"end": 4629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4613,
											"end": 4630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4560,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4560,
											"end": 4631,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4560,
											"end": 4631,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4560,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4638,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4638,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4638,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4644,
											"end": 4743,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4644,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4696,
											"end": 4702,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4730,
											"end": 4735,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4736,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4714,
											"end": 4736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4743,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4749,
											"end": 4918,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4749,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4873,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4862,
											"end": 4865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 4911,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4902,
											"end": 4905,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4898,
											"end": 4912,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4912,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4924,
											"end": 5072,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4924,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5066,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5072,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5072,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5072,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5078,
											"end": 5383,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5078,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5118,
											"end": 5121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5137,
											"end": 5157,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5157,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5137,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5171,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5189,
											"end": 5190,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5171,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5171,
											"end": 5191,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5171,
											"end": 5191,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5171,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5257,
											"end": 5323,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5253,
											"end": 5327,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5251,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5328,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 5244,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5377,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5383,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5383,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5383,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5389,
											"end": 5574,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 5389,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5429,
											"end": 5430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5446,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5464,
											"end": 5465,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5446,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5446,
											"end": 5466,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5446,
											"end": 5466,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5446,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5466,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5498,
											"end": 5499,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5480,
											"end": 5500,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5480,
											"end": 5500,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5480,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5475,
											"end": 5500,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5475,
											"end": 5500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 5564,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5574,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5574,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5574,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5580,
											"end": 5771,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 5580,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5620,
											"end": 5624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5640,
											"end": 5660,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5640,
											"end": 5660,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5640,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5635,
											"end": 5660,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5635,
											"end": 5660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5692,
											"end": 5693,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5674,
											"end": 5694,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5674,
											"end": 5694,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5674,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5707,
											"end": 5715,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5760,
											"end": 5761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5756,
											"end": 5765,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5771,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5771,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5771,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5777,
											"end": 5873,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5777,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5814,
											"end": 5821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5861,
											"end": 5866,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5843,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5843,
											"end": 5867,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5843,
											"end": 5867,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5843,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5832,
											"end": 5867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5832,
											"end": 5867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5873,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5822,
											"end": 5873,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5879,
											"end": 6005,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5879,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5916,
											"end": 5923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5998,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5949,
											"end": 5954,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 5999,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 5999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 5999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5924,
											"end": 6005,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5924,
											"end": 6005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5924,
											"end": 6005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5924,
											"end": 6005,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6011,
											"end": 6088,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6011,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6048,
											"end": 6055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6056,
											"end": 6088,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6094,
											"end": 6401,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 6094,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6285,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6172,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6192,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6180,
											"end": 6193,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6285,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6172,
											"end": 6285,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6272,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6262,
											"end": 6273,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6256,
											"end": 6274,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6275,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6205,
											"end": 6206,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6211,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6196,
											"end": 6211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6196,
											"end": 6211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6172,
											"end": 6285,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6285,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6172,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6303,
											"end": 6309,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6300,
											"end": 6301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6310,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6296,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 6294,
											"end": 6296,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6380,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6369,
											"end": 6372,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6358,
											"end": 6385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6296,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 6294,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6143,
											"end": 6401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6143,
											"end": 6401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6143,
											"end": 6401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6143,
											"end": 6401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6143,
											"end": 6401,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6407,
											"end": 6727,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6407,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6488,
											"end": 6489,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6482,
											"end": 6486,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6490,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6535,
											"end": 6536,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6529,
											"end": 6533,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6525,
											"end": 6537,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6612,
											"end": 6616,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6604,
											"end": 6610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6617,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6617,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6674,
											"end": 6676,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6663,
											"end": 6677,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6640,
											"end": 6678,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6727,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6727,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6733,
											"end": 6966,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 6733,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6813,
											"end": 6818,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6795,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6795,
											"end": 6819,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6795,
											"end": 6819,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6795,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6786,
											"end": 6819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6786,
											"end": 6819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 6907,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6831,
											"end": 6908,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6830,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6828,
											"end": 6830,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 6911,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6830,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6828,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6958,
											"end": 6959,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6951,
											"end": 6956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6940,
											"end": 6960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6940,
											"end": 6960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6966,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6966,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6972,
											"end": 7148,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6972,
											"end": 7148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7021,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 7021,
											"end": 7041,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7021,
											"end": 7041,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 7021,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7016,
											"end": 7041,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7016,
											"end": 7041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 7073,
											"end": 7074,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 7055,
											"end": 7075,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7055,
											"end": 7075,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 7055,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 7084,
											"end": 7086,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 7099,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7086,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 7084,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7140,
											"end": 7141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7137,
											"end": 7138,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7133,
											"end": 7142,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7148,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7148,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7006,
											"end": 7148,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7154,
											"end": 7334,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 7154,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7202,
											"end": 7279,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7199,
											"end": 7200,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7192,
											"end": 7280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7299,
											"end": 7303,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7289,
											"end": 7304,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7328,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7340,
											"end": 7520,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 7340,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7465,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7385,
											"end": 7386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7466,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7485,
											"end": 7489,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 7482,
											"end": 7483,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7475,
											"end": 7490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7506,
											"end": 7507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7499,
											"end": 7514,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7526,
											"end": 7706,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 7526,
											"end": 7706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7574,
											"end": 7651,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7571,
											"end": 7572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7652,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7675,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7668,
											"end": 7669,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7661,
											"end": 7676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7695,
											"end": 7699,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7692,
											"end": 7693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7685,
											"end": 7700,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7712,
											"end": 7814,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 7712,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7753,
											"end": 7759,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7800,
											"end": 7807,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7795,
											"end": 7797,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7788,
											"end": 7793,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7780,
											"end": 7808,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7770,
											"end": 7808,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7770,
											"end": 7808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7760,
											"end": 7814,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7760,
											"end": 7814,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7760,
											"end": 7814,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7760,
											"end": 7814,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7820,
											"end": 8048,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 7820,
											"end": 8048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7960,
											"end": 7994,
											"name": "PUSH",
											"source": 8,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7956,
											"end": 7957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7954,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7944,
											"end": 7958,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7937,
											"end": 7995,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8029,
											"end": 8040,
											"name": "PUSH",
											"source": 8,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8024,
											"end": 8026,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8016,
											"end": 8022,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8012,
											"end": 8027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8005,
											"end": 8041,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7926,
											"end": 8048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7926,
											"end": 8048,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8054,
											"end": 8228,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 8054,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8194,
											"end": 8220,
											"name": "PUSH",
											"source": 8,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 8190,
											"end": 8191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8182,
											"end": 8188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8192,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8221,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8160,
											"end": 8228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8160,
											"end": 8228,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8234,
											"end": 8356,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 8234,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8307,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 8325,
											"end": 8330,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8307,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 8307,
											"end": 8331,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8307,
											"end": 8331,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 8307,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8300,
											"end": 8305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8297,
											"end": 8332,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8287,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 8287,
											"end": 8289,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8347,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8336,
											"end": 8348,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8287,
											"end": 8289,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 8287,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8277,
											"end": 8356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8277,
											"end": 8356,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8362,
											"end": 8484,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 8362,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8435,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 8453,
											"end": 8458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8435,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 8435,
											"end": 8459,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8435,
											"end": 8459,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 8435,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8428,
											"end": 8433,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8460,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8415,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 8415,
											"end": 8417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8474,
											"end": 8475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8471,
											"end": 8472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8464,
											"end": 8476,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8415,
											"end": 8417,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 8415,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8405,
											"end": 8484,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8405,
											"end": 8484,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/721/ERC721.sol\":{\"keccak256\":\"0xc51c4ba97a8bfcbe1b41672c458eff943ba6628542e7522dbc3939e550448ff3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc62fd9f836d3e4059cbb9de65c2071b8cd850cb3fc24ce3f26d922b0e39cc3\",\"dweb:/ipfs/QmWTnXwFSSe4tE3nRYAdW1N12aAWvqPHydn191FuvSUUHn\"]},\"contracts/721/interfaces/IERC721.sol\":{\"keccak256\":\"0x98a80bfd2c07c212973cb15df7916a5d3c4c41c7b2423a7e1cb6f20416b2777f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8202cedc7aafa7d36034e1630a79f1d409aac45046af32f182719cb23031b7a\",\"dweb:/ipfs/Qma1Uhthq78Z4Rx8A4UeGeQvLej46NXi7MduB2wB3fuhc9\"]},\"contracts/721/interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xbd2f66fddef3b5180deb1c8bef90ae0a356f85c25dc7ef52fc663dea2b449ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ba681d1360880d7fb5457223586f550029f430bea9a7b34400eb63c4c3ecae\",\"dweb:/ipfs/QmTZGYJQJDE8nSuHFHshuc1fYSwdWJuEXVBZ9vUQKF6ao8\"]},\"contracts/721/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xf519c884616195e754dcc17993b01095b97ee7c63f695a8b99d351a143195201\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31d5c889c1bc19d04642d2d6cd3b58bc557f594b9fa67ec05d896366da5f51a4\",\"dweb:/ipfs/QmVVn4QxiSBBw1hgM7wuA5np2kGiVnn3P59zowzEuhqbyR\"]},\"contracts/721/utils/Address.sol\":{\"keccak256\":\"0x107b10b97a5a3c194f80ae6f35b15bb1c2752c596759d07375a34b3637ce1633\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37736cdc103b99f1cbc0a46c78e806cd40f27a1832b17336021d218eebecfbf0\",\"dweb:/ipfs/QmX2fU8erAnCTPh6nzJA9vJ3ZiULKzwqmPpygduUhUiwqw\"]},\"contracts/721/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"contracts/721/utils/Strings.sol\":{\"keccak256\":\"0x24b6c85c306c7bcf62b3879911b1920f105da5e1584c2f77016451cd57f016b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c6b9898b79bf7ca862ab9c3bc58875f820c5138b6c006cd3229399456466e0c\",\"dweb:/ipfs/QmciUgRnbKXAUeMUoDSdk9vEiR1RWnyirpjzMEzqbKsmHC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "contracts/721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 24,
								"contract": "contracts/721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 28,
								"contract": "contracts/721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 32,
								"contract": "contracts/721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 36,
								"contract": "contracts/721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 42,
								"contract": "contracts/721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/721/interfaces/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"ownerOf(uint256)": "6352211e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/721/interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/721/interfaces/IERC721.sol\":{\"keccak256\":\"0x98a80bfd2c07c212973cb15df7916a5d3c4c41c7b2423a7e1cb6f20416b2777f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8202cedc7aafa7d36034e1630a79f1d409aac45046af32f182719cb23031b7a\",\"dweb:/ipfs/Qma1Uhthq78Z4Rx8A4UeGeQvLej46NXi7MduB2wB3fuhc9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/721/interfaces/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/721/interfaces/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/721/interfaces/IERC721.sol\":{\"keccak256\":\"0x98a80bfd2c07c212973cb15df7916a5d3c4c41c7b2423a7e1cb6f20416b2777f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8202cedc7aafa7d36034e1630a79f1d409aac45046af32f182719cb23031b7a\",\"dweb:/ipfs/Qma1Uhthq78Z4Rx8A4UeGeQvLej46NXi7MduB2wB3fuhc9\"]},\"contracts/721/interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xbd2f66fddef3b5180deb1c8bef90ae0a356f85c25dc7ef52fc663dea2b449ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ba681d1360880d7fb5457223586f550029f430bea9a7b34400eb63c4c3ecae\",\"dweb:/ipfs/QmTZGYJQJDE8nSuHFHshuc1fYSwdWJuEXVBZ9vUQKF6ao8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/721/interfaces/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/721/interfaces/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/721/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xf519c884616195e754dcc17993b01095b97ee7c63f695a8b99d351a143195201\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31d5c889c1bc19d04642d2d6cd3b58bc557f594b9fa67ec05d896366da5f51a4\",\"dweb:/ipfs/QmVVn4QxiSBBw1hgM7wuA5np2kGiVnn3P59zowzEuhqbyR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/721/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/721/utils/Address.sol\":202:8526  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/721/utils/Address.sol\":202:8526  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220af6e9acfa4edeb8b86bea63d6a3d973f82192dca81844ff850dd503190de919864736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af6e9acfa4edeb8b86bea63d6a3d973f82192dca81844ff850dd503190de919864736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF PUSH15 0x9ACFA4EDEB8B86BEA63D6A3D973F82 NOT 0x2D 0xCA DUP2 DUP5 0x4F 0xF8 POP 0xDD POP BALANCE SWAP1 0xDE SWAP2 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "202:8324:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af6e9acfa4edeb8b86bea63d6a3d973f82192dca81844ff850dd503190de919864736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF PUSH15 0x9ACFA4EDEB8B86BEA63D6A3D973F82 NOT 0x2D 0xCA DUP2 DUP5 0x4F 0xF8 POP 0xDD POP BALANCE SWAP1 0xDE SWAP2 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "202:8324:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af6e9acfa4edeb8b86bea63d6a3d973f82192dca81844ff850dd503190de919864736f6c63430008040033",
									".code": [
										{
											"begin": 202,
											"end": 8526,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/721/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/721/utils/Address.sol\":{\"keccak256\":\"0x107b10b97a5a3c194f80ae6f35b15bb1c2752c596759d07375a34b3637ce1633\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37736cdc103b99f1cbc0a46c78e806cd40f27a1832b17336021d218eebecfbf0\",\"dweb:/ipfs/QmX2fU8erAnCTPh6nzJA9vJ3ZiULKzwqmPpygduUhUiwqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/721/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/721/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/721/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/721/utils/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/721/utils/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/721/ERC721.sol\":{\"keccak256\":\"0xc51c4ba97a8bfcbe1b41672c458eff943ba6628542e7522dbc3939e550448ff3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc62fd9f836d3e4059cbb9de65c2071b8cd850cb3fc24ce3f26d922b0e39cc3\",\"dweb:/ipfs/QmWTnXwFSSe4tE3nRYAdW1N12aAWvqPHydn191FuvSUUHn\"]},\"contracts/721/interfaces/IERC721.sol\":{\"keccak256\":\"0x98a80bfd2c07c212973cb15df7916a5d3c4c41c7b2423a7e1cb6f20416b2777f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8202cedc7aafa7d36034e1630a79f1d409aac45046af32f182719cb23031b7a\",\"dweb:/ipfs/Qma1Uhthq78Z4Rx8A4UeGeQvLej46NXi7MduB2wB3fuhc9\"]},\"contracts/721/interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xbd2f66fddef3b5180deb1c8bef90ae0a356f85c25dc7ef52fc663dea2b449ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ba681d1360880d7fb5457223586f550029f430bea9a7b34400eb63c4c3ecae\",\"dweb:/ipfs/QmTZGYJQJDE8nSuHFHshuc1fYSwdWJuEXVBZ9vUQKF6ao8\"]},\"contracts/721/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xf519c884616195e754dcc17993b01095b97ee7c63f695a8b99d351a143195201\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31d5c889c1bc19d04642d2d6cd3b58bc557f594b9fa67ec05d896366da5f51a4\",\"dweb:/ipfs/QmVVn4QxiSBBw1hgM7wuA5np2kGiVnn3P59zowzEuhqbyR\"]},\"contracts/721/utils/Address.sol\":{\"keccak256\":\"0x107b10b97a5a3c194f80ae6f35b15bb1c2752c596759d07375a34b3637ce1633\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37736cdc103b99f1cbc0a46c78e806cd40f27a1832b17336021d218eebecfbf0\",\"dweb:/ipfs/QmX2fU8erAnCTPh6nzJA9vJ3ZiULKzwqmPpygduUhUiwqw\"]},\"contracts/721/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"contracts/721/utils/ERC721URIStorage.sol\":{\"keccak256\":\"0x87573f6788f676ae4769599b0217f4d86daed3bb90ca408ea8abd00e531d2233\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://704e545bd45e46af1b270749ac710f08cd0021db5c4b40b8075113194e58a63d\",\"dweb:/ipfs/QmZXV36Vk5idGvNUimHhLXj7SD8pYK2X5hzd9NjPAqc8zu\"]},\"contracts/721/utils/Strings.sol\":{\"keccak256\":\"0x24b6c85c306c7bcf62b3879911b1920f105da5e1584c2f77016451cd57f016b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c6b9898b79bf7ca862ab9c3bc58875f820c5138b6c006cd3229399456466e0c\",\"dweb:/ipfs/QmciUgRnbKXAUeMUoDSdk9vEiR1RWnyirpjzMEzqbKsmHC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "contracts/721/utils/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 24,
								"contract": "contracts/721/utils/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 28,
								"contract": "contracts/721/utils/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 32,
								"contract": "contracts/721/utils/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 36,
								"contract": "contracts/721/utils/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 42,
								"contract": "contracts/721/utils/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 810,
								"contract": "contracts/721/utils/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/721/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/721/utils/Strings.sol\":154:2455  library Strings {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/721/utils/Strings.sol\":154:2455  library Strings {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122045ead539f2affeee9abf96d43e209172f0d348b2f46355788348bd25595eb7d764736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045ead539f2affeee9abf96d43e209172f0d348b2f46355788348bd25595eb7d764736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xEA 0xD5 CODECOPY CALLCODE 0xAF INVALID 0xEE SWAP11 0xBF SWAP7 0xD4 RETURNDATACOPY KECCAK256 SWAP2 PUSH19 0xF0D348B2F46355788348BD25595EB7D764736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "154:2301:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122045ead539f2affeee9abf96d43e209172f0d348b2f46355788348bd25595eb7d764736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xEA 0xD5 CODECOPY CALLCODE 0xAF INVALID 0xEE SWAP11 0xBF SWAP7 0xD4 RETURNDATACOPY KECCAK256 SWAP2 PUSH19 0xF0D348B2F46355788348BD25595EB7D764736F PUSH13 0x63430008040033000000000000 ",
							"sourceMap": "154:2301:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 154,
									"end": 2455,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122045ead539f2affeee9abf96d43e209172f0d348b2f46355788348bd25595eb7d764736f6c63430008040033",
									".code": [
										{
											"begin": 154,
											"end": 2455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 154,
											"end": 2455,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 154,
											"end": 2455,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 154,
											"end": 2455,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 154,
											"end": 2455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 154,
											"end": 2455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 154,
											"end": 2455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 2455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 154,
											"end": 2455,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/721/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/721/utils/Strings.sol\":{\"keccak256\":\"0x24b6c85c306c7bcf62b3879911b1920f105da5e1584c2f77016451cd57f016b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c6b9898b79bf7ca862ab9c3bc58875f820c5138b6c006cd3229399456466e0c\",\"dweb:/ipfs/QmciUgRnbKXAUeMUoDSdk9vEiR1RWnyirpjzMEzqbKsmHC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/721/ERC721.sol": {
				"ast": {
					"absolutePath": "contracts/721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							775
						],
						"Context": [
							797
						],
						"ERC721": [
							406
						],
						"IERC721": [
							435
						],
						"IERC721Metadata": [
							462
						],
						"IERC721Receiver": [
							480
						],
						"Strings": [
							1118
						]
					},
					"id": 407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:0"
						},
						{
							"absolutePath": "contracts/721/interfaces/IERC721.sol",
							"file": "./interfaces/IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 436,
							"src": "137:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/721/interfaces/IERC721Receiver.sol",
							"file": "./interfaces/IERC721Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 481,
							"src": "173:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/721/interfaces/IERC721Metadata.sol",
							"file": "./interfaces/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 463,
							"src": "217:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/721/utils/Address.sol",
							"file": "./utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 776,
							"src": "261:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/721/utils/Context.sol",
							"file": "./utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 798,
							"src": "292:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/721/utils/Strings.sol",
							"file": "./utils/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 1119,
							"src": "323:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 797,
										"src": "627:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "627:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 435,
										"src": "636:7:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "636:7:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "645:15:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "645:15:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "356:250:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 406,
							"linearizedBaseContracts": [
								406,
								462,
								435,
								797
							],
							"name": "ERC721",
							"nameLocation": "617:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 17,
									"libraryName": {
										"id": 15,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "674:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "668:26:0",
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "686:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1118,
										"src": "706:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "700:26:0",
									"typeName": {
										"id": 19,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "768:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 406,
									"src": "753:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 21,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "753:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "818:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 406,
									"src": "803:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 23,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "803:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "917:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 406,
									"src": "881:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 27,
										"keyType": {
											"id": 25,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "889:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "881:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "900:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1014:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 406,
									"src": "978:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 31,
										"keyType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "986:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "978:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 30,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "997:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1118:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 406,
									"src": "1082:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 35,
										"keyType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1090:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1082:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1244:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 406,
									"src": "1191:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1199:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1191:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 40,
											"keyType": {
												"id": 38,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1218:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1210:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 39,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1229:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1443:60:0",
										"statements": [
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1454:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 51,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1462:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1454:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "1454:13:0"
											},
											{
												"expression": {
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 54,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 55,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1488:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1478:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "1478:17:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1271:110:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 59,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1413:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1399:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1399:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1420:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 46,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1420:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:44:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1443:0:0"
									},
									"scope": 406,
									"src": "1387:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										426
									],
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "2025:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "2044:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2061:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2053:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2053:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2053:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2044:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2065:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2036:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2036:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "2036:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 78,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2127:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 80,
													"indexExpression": {
														"id": 79,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2137:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2127:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 67,
												"id": 81,
												"nodeType": "Return",
												"src": "2120:23:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1888:50:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1953:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 64,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1998:8:0"
									},
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1971:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1963:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:15:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "2016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:9:0"
									},
									"scope": 406,
									"src": "1944:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										434
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2294:141:0",
										"statements": [
											{
												"assignments": [
													93
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2313:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2305:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 92,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2305:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"baseExpression": {
														"id": 94,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "2321:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 96,
													"indexExpression": {
														"id": 95,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2321:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2305:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "2356:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2373:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2365:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2365:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2365:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2356:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2377:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2348:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2348:56:0"
											},
											{
												"expression": {
													"id": 108,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 93,
													"src": "2422:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 91,
												"id": 109,
												"nodeType": "Return",
												"src": "2415:12:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2159:48:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2222:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 88,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2267:8:0"
									},
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2230:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:17:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2285:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:9:0"
									},
									"scope": 406,
									"src": "2213:222:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										447
									],
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "2571:31:0",
										"statements": [
											{
												"expression": {
													"id": 118,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 22,
													"src": "2589:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 117,
												"id": 119,
												"nodeType": "Return",
												"src": "2582:12:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "2443:53:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2511:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 114,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2538:8:0"
									},
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2515:2:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2556:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2556:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:15:0"
									},
									"scope": 406,
									"src": "2502:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										453
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2742:33:0",
										"statements": [
											{
												"expression": {
													"id": 128,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "2760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 127,
												"id": 129,
												"nodeType": "Return",
												"src": "2753:14:0"
											}
										]
									},
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "2610:55:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2680:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2709:8:0"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2686:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2727:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 125,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2727:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:15:0"
									},
									"scope": 406,
									"src": "2671:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										461
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "2934:193:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 141,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "2960:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 140,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "2945:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2945:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2945:23:0"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2995:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 169,
														"src": "2981:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 144,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2981:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 146,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3005:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3005:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2981:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 151,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3039:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3033:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 149,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3033:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3033:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3033:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3057:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3033:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3117:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3033:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 160,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3085:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 161,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 134,
																				"src": "3094:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 980,
																			"src": "3094:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3094:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 158,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3068:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3068:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3068:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3061:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 156,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3061:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3061:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 139,
												"id": 168,
												"nodeType": "Return",
												"src": "3026:93:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2783:57:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2855:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2901:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2872:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2864:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2863:17:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2919:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 137,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2919:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2918:15:0"
									},
									"scope": 406,
									"src": "2846:281:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "3442:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3460:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 175,
												"id": 177,
												"nodeType": "Return",
												"src": "3453:9:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "3135:235:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3385:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3393:2:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3427:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3427:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:15:0"
									},
									"scope": 406,
									"src": "3376:94:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "7279:56:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 187,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "7297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 189,
														"indexExpression": {
															"id": 188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "7305:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7297:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7325:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 190,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7317:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7317:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7297:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 186,
												"id": 195,
												"nodeType": "Return",
												"src": "7290:37:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "6903:299:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7217:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7233:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "7225:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7224:17:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "7273:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7273:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7272:6:0"
									},
									"scope": 406,
									"src": "7208:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "8173:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "8194:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 207,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "8198:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8207:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 205,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															241
														],
														"referencedDeclaration": 241,
														"src": "8184:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8184:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "8184:26:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "7774:328:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8117:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8135:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8127:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8147:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8126:29:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8173:0:0"
									},
									"scope": 406,
									"src": "8108:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "8563:201:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "8580:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "8584:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 222,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "8574:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8574:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "8574:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8656:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8648:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 229,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8648:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8648:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 233,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "8660:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 234,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "8664:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 235,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8673:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 228,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "8625:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8625:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8693:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8603:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8603:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "8603:153:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8226:213:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8454:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8482:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8474:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8521:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8521:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8463:82:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8563:0:0"
									},
									"scope": 406,
									"src": "8445:319:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "9161:378:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 250,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "9180:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9194:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9186:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 251,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9186:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9186:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9180:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9198:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9172:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "9172:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9252:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 261,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "9261:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 260,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "9253:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9253:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9271:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9244:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9244:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "9244:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9344:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9336:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 268,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9336:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9336:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "9348:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "9352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 267,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "9315:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9315:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "9315:45:0"
											},
											{
												"expression": {
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 276,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "9373:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 278,
														"indexExpression": {
															"id": 277,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "9383:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9373:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9390:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9373:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "9373:18:0"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 282,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "9402:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 284,
														"indexExpression": {
															"id": 283,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "9410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9402:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 285,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "9421:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9402:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "9402:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9458:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9450:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9450:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9450:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "9462:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 294,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "9466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 288,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "9441:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9441:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "EmitStatement",
												"src": "9436:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9515:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9507:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 298,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9507:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9507:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "9519:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "9523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9487:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9487:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "9487:44:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "8772:322:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9109:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9123:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "9115:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9135:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "9127:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9114:29:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9161:0:0"
									},
									"scope": 406,
									"src": "9100:439:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "12053:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 315,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "12080:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 314,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "12072:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12072:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12090:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 313,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12064:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12064:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "12064:53:0"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "11909:75:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "11999:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12022:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "12014:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12013:17:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12053:0:0"
									},
									"scope": 406,
									"src": "11990:135:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "12849:693:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "12864:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 498,
														"src": "12864:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12864:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 380,
													"nodeType": "Block",
													"src": "13497:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13519:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 334,
															"id": 379,
															"nodeType": "Return",
															"src": "13512:11:0"
														}
													]
												},
												"id": 381,
												"nodeType": "IfStatement",
												"src": "12860:675:0",
												"trueBody": {
													"id": 377,
													"nodeType": "Block",
													"src": "12881:610:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 357,
																		"nodeType": "Block",
																		"src": "12996:93:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 351,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 349,
																						"src": "13022:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 352,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 480,
																								"src": "13032:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$480_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 353,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 479,
																							"src": "13032:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 354,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13032:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13022:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 334,
																				"id": 356,
																				"nodeType": "Return",
																				"src": "13015:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 358,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 350,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 349,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "12988:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 358,
																				"src": "12981:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 348,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "12981:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12980:15:0"
																	},
																	"src": "12972:117:0"
																},
																{
																	"block": {
																		"id": 374,
																		"nodeType": "Block",
																		"src": "13118:362:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 365,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 362,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 360,
																							"src": "13141:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "13141:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 364,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13158:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "13141:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 372,
																					"nodeType": "Block",
																					"src": "13270:195:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "13358:88:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "13396:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "13400:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "13392:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "13392:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "13415:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "13409:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "13409:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "13385:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "13385:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "13385:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "istanbul",
																							"externalReferences": [
																								{
																									"declaration": 360,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "13400:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 360,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "13415:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 371,
																							"nodeType": "InlineAssembly",
																							"src": "13349:97:0"
																						}
																					]
																				},
																				"id": 373,
																				"nodeType": "IfStatement",
																				"src": "13137:328:0",
																				"trueBody": {
																					"id": 370,
																					"nodeType": "Block",
																					"src": "13161:103:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 367,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13191:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 366,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "13184:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 368,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13184:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 369,
																							"nodeType": "ExpressionStatement",
																							"src": "13184:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 375,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 361,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 360,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "13110:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 375,
																				"src": "13097:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 359,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "13097:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13096:21:0"
																	},
																	"src": "13090:390:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 342,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 787,
																			"src": "12937:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12937:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 344,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 324,
																		"src": "12951:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 345,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "12957:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 346,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "12966:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 339,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 326,
																				"src": "12916:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 338,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "12900:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$480_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12900:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$480",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 479,
																	"src": "12900:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12900:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 376,
															"nodeType": "TryStatement",
															"src": "12896:584:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "12133:550:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "12698:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12739:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "12731:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12762:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "12754:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12783:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "12775:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12814:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "12801:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12801:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12720:105:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "12843:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12843:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12842:6:0"
									},
									"scope": 406,
									"src": "12689:853:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "14238:2:0",
										"statements": []
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "13550:558:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14123:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14162:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14154:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14185:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14177:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14206:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14198:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14143:77:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14238:0:0"
									},
									"scope": 406,
									"src": "14114:126:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "14754:2:0",
										"statements": []
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "14254:371:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "14640:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "14670:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14701:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "14693:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14722:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "14714:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14659:77:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14754:0:0"
									},
									"scope": 406,
									"src": "14631:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 407,
							"src": "608:14157:0",
							"usedErrors": []
						}
					],
					"src": "110:14655:0"
				},
				"id": 0
			},
			"contracts/721/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/721/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							435
						]
					},
					"id": 436,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 409,
								"nodeType": "StructuredDocumentation",
								"src": "138:69:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 435,
							"linearizedBaseContracts": [
								435
							],
							"name": "IERC721",
							"nameLocation": "219:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "234:90:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 418,
									"name": "Transfer",
									"nameLocation": "336:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "361:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "345:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "383:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "367:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "403:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "387:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:67:1"
									},
									"src": "330:82:1"
								},
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "849:78:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "942:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "960:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "952:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:15:1"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "998:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "990:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:17:1"
									},
									"scope": 435,
									"src": "933:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "1015:137:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1167:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1183:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1175:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:17:1"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1223:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1215:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:15:1"
									},
									"scope": 435,
									"src": "1158:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 436,
							"src": "209:4654:1",
							"usedErrors": []
						}
					],
					"src": "111:4752:1"
				},
				"id": 1
			},
			"contracts/721/interfaces/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/721/interfaces/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							435
						],
						"IERC721Metadata": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 437,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"absolutePath": "contracts/721/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 438,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 436,
							"src": "142:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 440,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 435,
										"src": "336:7:2"
									},
									"id": 441,
									"nodeType": "InheritanceSpecifier",
									"src": "336:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 439,
								"nodeType": "StructuredDocumentation",
								"src": "169:136:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 462,
							"linearizedBaseContracts": [
								462,
								435
							],
							"name": "IERC721Metadata",
							"nameLocation": "317:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "351:60:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "426:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "430:2:2"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "456:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "456:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:15:2"
									},
									"scope": 462,
									"src": "417:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "479:62:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "556:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:2:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "588:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "588:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:15:2"
									},
									"scope": 462,
									"src": "547:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "611:92:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "718:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "735:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "727:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:17:2"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "767:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "767:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:15:2"
									},
									"scope": 462,
									"src": "709:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 463,
							"src": "307:478:2",
							"usedErrors": []
						}
					],
					"src": "115:670:2"
				},
				"id": 2
			},
			"contracts/721/interfaces/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/721/interfaces/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							480
						]
					},
					"id": 481,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "119:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 465,
								"nodeType": "StructuredDocumentation",
								"src": "146:156:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 480,
							"linearizedBaseContracts": [
								480
							],
							"name": "IERC721Receiver",
							"nameLocation": "314:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "337:501:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "853:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "888:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "880:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "915:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "907:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "971:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "956:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "956:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:113:3"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "1001:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 476,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1001:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:8:3"
									},
									"scope": 480,
									"src": "844:165:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 481,
							"src": "304:708:3",
							"usedErrors": []
						}
					],
					"src": "119:893:3"
				},
				"id": 3
			},
			"contracts/721/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/721/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 482,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 483,
								"nodeType": "StructuredDocumentation",
								"src": "131:69:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 775,
							"linearizedBaseContracts": [
								775
							],
							"name": "Address",
							"nameLocation": "210:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "1276:260:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 491,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "1505:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1505:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1505:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1527:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1505:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 490,
												"id": 496,
												"nodeType": "Return",
												"src": "1498:30:4"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "225:979:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1219:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1238:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1230:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:17:4"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1270:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1270:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:6:4"
									},
									"scope": 775,
									"src": "1210:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2542:246:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 509,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2569:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$775",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$775",
																				"typeString": "library Address"
																			}
																		],
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2561:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 507,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2561:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2561:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2561:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 512,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "2586:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2561:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2594:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2553:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "2553:73:4"
											},
											{
												"assignments": [
													518,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2645:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "2640:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 517,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2640:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 525,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2688:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 519,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "2658:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2658:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 521,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "2680:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2658:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2658:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2639:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 527,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "2710:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2719:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2702:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "2702:78:4"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1544:921:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2480:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2506:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2490:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2525:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2517:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2489:43:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:0:4"
									},
									"scope": 775,
									"src": "2471:317:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3639:86:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3670:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3678:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3684:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 542,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															549,
															569
														],
														"referencedDeclaration": 569,
														"src": "3657:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 541,
												"id": 547,
												"nodeType": "Return",
												"src": "3650:67:4"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "2796:748:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3559:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3580:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3572:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3601:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3588:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3588:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:35:4"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3625:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3625:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:14:4"
									},
									"scope": 775,
									"src": "3550:175:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "4106:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 562,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4146:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4154:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4160:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 565,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4163:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 561,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															589,
															639
														],
														"referencedDeclaration": 639,
														"src": "4124:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4124:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 560,
												"id": 567,
												"nodeType": "Return",
												"src": "4117:59:4"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3733:216:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3964:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3995:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3987:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3987:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "4012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4054:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "4040:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4040:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3976:97:4"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "4092:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4092:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4091:14:4"
									},
									"scope": 775,
									"src": "3955:229:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "4706:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 582,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4746:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4754:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 584,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "4760:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4767:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 581,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															589,
															639
														],
														"referencedDeclaration": 639,
														"src": "4724:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4724:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 580,
												"id": 587,
												"nodeType": "Return",
												"src": "4717:94:4"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "4192:361:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4568:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "4600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4638:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "4625:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4625:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4661:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "4653:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4589:84:4"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "4692:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4692:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:14:4"
									},
									"scope": 775,
									"src": "4559:260:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "5259:326:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 606,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5286:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$775",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$775",
																				"typeString": "library Address"
																			}
																		],
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5278:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 604,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5278:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5278:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5278:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 609,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "5303:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5278:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5310:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5270:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5270:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "5270:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 616,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "5381:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 615,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "5370:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5370:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5390:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5362:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5362:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "5362:60:4"
											},
											{
												"assignments": [
													622,
													624
												],
												"declarations": [
													{
														"constant": false,
														"id": 622,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5441:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "5436:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 621,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5436:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 624,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5463:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 638,
														"src": "5450:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 623,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5450:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"arguments": [
														{
															"id": 629,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "5503:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 625,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "5477:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5477:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 627,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "5496:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5477:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5477:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5435:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5543:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 634,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5552:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 635,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5564:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 632,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "5526:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5526:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 602,
												"id": 637,
												"nodeType": "Return",
												"src": "5519:58:4"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "4827:242:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5084:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5154:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "5141:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5141:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5177:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "5169:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5207:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "5193:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 597,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5193:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:121:4"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "5245:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:14:4"
									},
									"scope": 775,
									"src": "5075:510:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "5870:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 650,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5907:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "5915:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5921:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 649,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															656,
															691
														],
														"referencedDeclaration": 691,
														"src": "5888:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5888:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 648,
												"id": 654,
												"nodeType": "Return",
												"src": "5881:80:4"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "5593:171:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5779:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5806:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5798:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5827:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5814:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5814:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5797:35:4"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "5856:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5855:14:4"
									},
									"scope": 775,
									"src": "5770:199:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "6323:233:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 670,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "6353:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 669,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "6342:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6342:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6362:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 668,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6334:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6334:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "6334:67:4"
											},
											{
												"assignments": [
													676,
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 676,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6420:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 690,
														"src": "6415:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 675,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6415:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6442:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 690,
														"src": "6429:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 677,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [
														{
															"id": 681,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "6474:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 679,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "6456:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6456:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6456:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6414:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 686,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "6523:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 687,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "6535:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 684,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "6497:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6497:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 667,
												"id": 689,
												"nodeType": "Return",
												"src": "6490:58:4"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "5977:178:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6170:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6207:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6199:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6237:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6224:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6224:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6266:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6252:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 662,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6252:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6188:97:4"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6309:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6309:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6308:14:4"
									},
									"scope": 775,
									"src": "6161:395:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "6840:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 702,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "6879:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6887:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6893:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 701,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															708,
															743
														],
														"referencedDeclaration": 743,
														"src": "6858:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6858:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 700,
												"id": 706,
												"nodeType": "Return",
												"src": "6851:84:4"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "6564:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6752:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6781:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6773:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6802:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6789:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 695,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6789:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6772:35:4"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6826:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6826:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6825:14:4"
									},
									"scope": 775,
									"src": "6743:200:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "7296:237:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 722,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "7326:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 721,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "7315:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7315:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7335:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7307:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "7307:69:4"
											},
											{
												"assignments": [
													728,
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 728,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7395:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "7390:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 727,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7390:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7417:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "7404:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 729,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7404:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 733,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "7451:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 731,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "7431:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7431:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7431:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7389:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 737,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "7491:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 738,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "7500:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 739,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "7512:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 736,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "7474:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7474:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 719,
												"id": 741,
												"nodeType": "Return",
												"src": "7467:58:4"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "6951:180:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7146:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7185:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7177:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7215:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7202:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 712,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7202:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7244:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7230:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 714,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7230:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7166:97:4"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "7282:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 717,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7282:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7281:14:4"
									},
									"scope": 775,
									"src": "7137:396:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "7925:598:4",
										"statements": [
											{
												"condition": {
													"id": 755,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 746,
													"src": "7940:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 771,
													"nodeType": "Block",
													"src": "7999:517:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 759,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "8085:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8085:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8105:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8085:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 769,
																"nodeType": "Block",
																"src": "8450:55:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 766,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 750,
																					"src": "8476:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 765,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8469:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8469:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 768,
																		"nodeType": "ExpressionStatement",
																		"src": "8469:20:4"
																	}
																]
															},
															"id": 770,
															"nodeType": "IfStatement",
															"src": "8081:424:4",
															"trueBody": {
																"id": 764,
																"nodeType": "Block",
																"src": "8108:336:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8281:148:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8304:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8333:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8327:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8327:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8308:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8377:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8381:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8373:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8373:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8394:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8366:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8366:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8366:44:4"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 748,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8333:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 748,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8381:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 763,
																		"nodeType": "InlineAssembly",
																		"src": "8272:157:4"
																	}
																]
															}
														}
													]
												},
												"id": 772,
												"nodeType": "IfStatement",
												"src": "7936:580:4",
												"trueBody": {
													"id": 758,
													"nodeType": "Block",
													"src": "7949:44:4",
													"statements": [
														{
															"expression": {
																"id": 756,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "7971:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 754,
															"id": 757,
															"nodeType": "Return",
															"src": "7964:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "7541:214:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7770:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7802:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7797:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7797:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7833:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7820:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7820:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7868:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7854:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 749,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7854:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:101:4"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7911:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7911:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7910:14:4"
									},
									"scope": 775,
									"src": "7761:762:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 776,
							"src": "202:8324:4",
							"usedErrors": []
						}
					],
					"src": "104:8422:4"
				},
				"id": 4
			},
			"contracts/721/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/721/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							797
						]
					},
					"id": 798,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 778,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 797,
							"linearizedBaseContracts": [
								797
							],
							"name": "Context",
							"nameLocation": "641:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "718:36:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 783,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 782,
												"id": 785,
												"nodeType": "Return",
												"src": "729:17:5"
											}
										]
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 797,
									"src": "656:98:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "829:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 792,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 791,
												"id": 794,
												"nodeType": "Return",
												"src": "840:15:5"
											}
										]
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "813:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 789,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:5"
									},
									"scope": 797,
									"src": "762:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 798,
							"src": "623:243:5",
							"usedErrors": []
						}
					],
					"src": "89:777:5"
				},
				"id": 5
			},
			"contracts/721/utils/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "contracts/721/utils/ERC721URIStorage.sol",
					"exportedSymbols": {
						"Address": [
							775
						],
						"Context": [
							797
						],
						"ERC721": [
							406
						],
						"ERC721URIStorage": [
							892
						],
						"IERC721": [
							435
						],
						"IERC721Metadata": [
							462
						],
						"IERC721Receiver": [
							480
						],
						"Strings": [
							1118
						]
					},
					"id": 893,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 799,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:6"
						},
						{
							"absolutePath": "contracts/721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 893,
							"sourceUnit": 407,
							"src": "143:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 802,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 406,
										"src": "281:6:6"
									},
									"id": 803,
									"nodeType": "InheritanceSpecifier",
									"src": "281:6:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 801,
								"nodeType": "StructuredDocumentation",
								"src": "170:71:6",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": false,
							"id": 892,
							"linearizedBaseContracts": [
								892,
								406,
								462,
								435,
								797
							],
							"name": "ERC721URIStorage",
							"nameLocation": "261:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 806,
									"libraryName": {
										"id": 804,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1118,
										"src": "301:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "295:26:6",
									"typeName": {
										"id": 805,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 810,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "404:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 892,
									"src": "369:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 809,
										"keyType": {
											"id": 807,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "377:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "369:26:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 808,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "388:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										170
									],
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "574:536:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "600:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 819,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "585:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "585:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "585:23:6"
											},
											{
												"assignments": [
													824
												],
												"declarations": [
													{
														"constant": false,
														"id": 824,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "635:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "621:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 823,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "621:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"baseExpression": {
														"id": 825,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "647:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 827,
													"indexExpression": {
														"id": 826,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "658:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "647:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "621:45:6"
											},
											{
												"assignments": [
													830
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "691:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 868,
														"src": "677:18:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 829,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "677:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 833,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 831,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "698:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "677:31:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 836,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "790:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "784:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 834,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "784:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "784:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "784:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "806:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "784:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "IfStatement",
												"src": "780:72:6",
												"trueBody": {
													"id": 843,
													"nodeType": "Block",
													"src": "809:43:6",
													"statements": [
														{
															"expression": {
																"id": 841,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "831:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 818,
															"id": 842,
															"nodeType": "Return",
															"src": "824:16:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 847,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "962:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "956:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 845,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "956:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "956:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "956:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "982:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "956:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 862,
												"nodeType": "IfStatement",
												"src": "952:108:6",
												"trueBody": {
													"id": 861,
													"nodeType": "Block",
													"src": "985:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 856,
																				"name": "base",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "1031:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 857,
																				"name": "_tokenURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "1037:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 854,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1014:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1014:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1014:33:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1007:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 852,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:6:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1007:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 818,
															"id": 860,
															"nodeType": "Return",
															"src": "1000:48:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "1094:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 863,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1079:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$892_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 170,
														"src": "1079:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1079:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 818,
												"id": 867,
												"nodeType": "Return",
												"src": "1072:30:6"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "423:57:6",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "495:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 815,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "541:8:6"
									},
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "512:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "504:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:17:6"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "559:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 816,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:6"
									},
									"scope": 892,
									"src": "486:624:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "1347:136:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 879,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "1374:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 878,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "1366:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1366:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1384:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															},
															"value": "ERC721URIStorage: URI set of nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1358:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "1358:75:6"
											},
											{
												"expression": {
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 884,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "1444:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 886,
														"indexExpression": {
															"id": 885,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "1455:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1444:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 887,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "1466:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1444:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "1444:31:6"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "1118:142:6",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1275:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1296:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "1288:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1319:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "1305:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:42:6"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1347:0:6"
									},
									"scope": 892,
									"src": "1266:217:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 893,
							"src": "243:1674:6",
							"usedErrors": []
						}
					],
					"src": "116:1801:6"
				},
				"id": 6
			},
			"contracts/721/utils/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/721/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1118
						]
					},
					"id": 1119,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 894,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 895,
								"nodeType": "StructuredDocumentation",
								"src": "116:36:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1118,
							"linearizedBaseContracts": [
								1118
							],
							"name": "Strings",
							"nameLocation": "162:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 898,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "202:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1118,
									"src": "177:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 896,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 897,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "217:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 901,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "265:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1118,
									"src": "242:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 899,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "242:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 900,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "283:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "463:652:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 909,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "669:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "678:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "669:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 915,
												"nodeType": "IfStatement",
												"src": "665:53:7",
												"trueBody": {
													"id": 914,
													"nodeType": "Block",
													"src": "681:37:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "703:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 908,
															"id": 913,
															"nodeType": "Return",
															"src": "696:10:7"
														}
													]
												}
											},
											{
												"assignments": [
													917
												],
												"declarations": [
													{
														"constant": false,
														"id": 917,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "736:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "728:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 916,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "728:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"id": 918,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 904,
													"src": "743:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "728:20:7"
											},
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "767:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "759:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "759:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 922,
												"nodeType": "VariableDeclarationStatement",
												"src": "759:14:7"
											},
											{
												"body": {
													"id": 933,
													"nodeType": "Block",
													"src": "802:60:7",
													"statements": [
														{
															"expression": {
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "817:8:7",
																"subExpression": {
																	"id": 926,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "817:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 928,
															"nodeType": "ExpressionStatement",
															"src": "817:8:7"
														},
														{
															"expression": {
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 929,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "840:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "848:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "840:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 932,
															"nodeType": "ExpressionStatement",
															"src": "840:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "791:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "799:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "791:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 934,
												"nodeType": "WhileStatement",
												"src": "784:78:7"
											},
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "885:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "872:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 935,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "872:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"initialValue": {
													"arguments": [
														{
															"id": 939,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "904:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "894:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 937,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "898:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "894:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "872:39:7"
											},
											{
												"body": {
													"id": 972,
													"nodeType": "Block",
													"src": "941:135:7",
													"statements": [
														{
															"expression": {
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 945,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "956:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "966:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "956:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 948,
															"nodeType": "ExpressionStatement",
															"src": "956:11:7"
														},
														{
															"expression": {
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 949,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "982:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 951,
																	"indexExpression": {
																		"id": 950,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 921,
																		"src": "989:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "982:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 963,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 956,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1012:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 961,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 959,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 904,
																									"src": "1025:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 960,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1033:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1025:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 958,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1017:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 957,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1017:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 962,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1017:19:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1012:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1006:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 954,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "1006:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1006:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "999:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 952,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "999:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "999:39:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "982:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 967,
															"nodeType": "ExpressionStatement",
															"src": "982:56:7"
														},
														{
															"expression": {
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 968,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "1053:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1062:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1053:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 971,
															"nodeType": "ExpressionStatement",
															"src": "1053:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 942,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "929:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "929:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "WhileStatement",
												"src": "922:154:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "1100:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1093:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 974,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1093:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1093:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 908,
												"id": 978,
												"nodeType": "Return",
												"src": "1086:21:7"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "294:92:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "410:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:7"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "448:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 906,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:7"
									},
									"scope": 1118,
									"src": "392:723:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "1299:266:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "1314:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1323:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1314:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "1310:56:7",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "1326:40:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1348:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 987,
															"id": 992,
															"nodeType": "Return",
															"src": "1341:13:7"
														}
													]
												}
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1384:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "1376:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1376:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 998,
												"initialValue": {
													"id": 997,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 983,
													"src": "1391:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1376:20:7"
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1415:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "1407:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 999,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1407:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1002,
												"initialValue": {
													"hexValue": "30",
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1424:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1407:18:7"
											},
											{
												"body": {
													"id": 1013,
													"nodeType": "Block",
													"src": "1454:60:7",
													"statements": [
														{
															"expression": {
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1469:8:7",
																"subExpression": {
																	"id": 1006,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "1469:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1008,
															"nodeType": "ExpressionStatement",
															"src": "1469:8:7"
														},
														{
															"expression": {
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1009,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "1492:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1501:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1492:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1012,
															"nodeType": "ExpressionStatement",
															"src": "1492:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1003,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1443:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1451:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1443:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "WhileStatement",
												"src": "1436:78:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1016,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "1543:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1017,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "1550:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1015,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1021,
															1097,
															1117
														],
														"referencedDeclaration": 1097,
														"src": "1531:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 987,
												"id": 1019,
												"nodeType": "Return",
												"src": "1524:33:7"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "1123:96:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1234:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1254:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1246:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:15:7"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1284:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 985,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1284:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:15:7"
									},
									"scope": 1118,
									"src": "1225:340:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "1783:361:7",
										"statements": [
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1807:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1794:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1031,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1794:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1826:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1036,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "1830:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1826:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1839:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1826:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1816:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1033,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1820:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1794:47:7"
											},
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1042,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "1852:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1044,
														"indexExpression": {
															"hexValue": "30",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1859:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1852:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1864:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1852:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "1852:15:7"
											},
											{
												"expression": {
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1048,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "1878:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1050,
														"indexExpression": {
															"hexValue": "31",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1885:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1878:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1890:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1878:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "1878:15:7"
											},
											{
												"body": {
													"id": 1082,
													"nodeType": "Block",
													"src": "1949:90:7",
													"statements": [
														{
															"expression": {
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1068,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "1964:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1070,
																	"indexExpression": {
																		"id": 1069,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "1971:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1964:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1071,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "1976:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1075,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1072,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "1989:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1997:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1989:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1976:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1964:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1077,
															"nodeType": "ExpressionStatement",
															"src": "1964:37:7"
														},
														{
															"expression": {
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1078,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "2016:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2026:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2016:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1081,
															"nodeType": "ExpressionStatement",
															"src": "2016:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1062,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "1937:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1941:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1937:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1083,
												"initializationExpression": {
													"assignments": [
														1055
													],
													"declarations": [
														{
															"constant": false,
															"id": 1055,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1917:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1083,
															"src": "1909:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1054,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1909:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1061,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1921:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1057,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "1925:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1921:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1934:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1921:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1909:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1944:3:7",
														"subExpression": {
															"id": 1065,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "1946:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1067,
													"nodeType": "ExpressionStatement",
													"src": "1944:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1904:135:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1085,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "2057:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2066:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2057:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2069:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2049:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2049:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "2049:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1093,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "2129:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2122:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1091,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2122:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1095,
												"nodeType": "Return",
												"src": "2115:21:7"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "1573:114:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1702:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1722:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1714:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1714:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1737:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1729:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1713:31:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1768:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1768:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1767:15:7"
									},
									"scope": 1118,
									"src": "1693:451:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "2374:78:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1110,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1100,
																			"src": "2420:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2412:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1108,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2412:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2412:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2404:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1106,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2404:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2404:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1113,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "2428:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1105,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1021,
															1097,
															1117
														],
														"referencedDeclaration": 1097,
														"src": "2392:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2392:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1104,
												"id": 1115,
												"nodeType": "Return",
												"src": "2385:59:7"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "2152:143:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2310:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2330:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "2322:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:14:7"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "2359:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1102,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2359:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2358:15:7"
									},
									"scope": 1118,
									"src": "2301:151:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1119,
							"src": "154:2301:7",
							"usedErrors": []
						}
					],
					"src": "89:2366:7"
				},
				"id": 7
			}
		}
	}
}